{"version":3,"file":"static/js/420.37e30a81.chunk.js","mappings":"+OAkEA,UA3DmB,SAACA,GAChB,IAAAC,GAA0BC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA/BI,EAAKF,EAAA,GAAEG,EAAQH,EAAA,GACtBI,GAAwBL,EAAAA,EAAAA,UAAS,IAAGM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAA7BE,EAAID,EAAA,GAAEE,EAAOF,EAAA,GAEdG,GAAWC,EAAAA,EAAAA,MAEXC,GAAiBC,EAAAA,EAAAA,YAAWC,EAAAA,GAC5BC,GAAcF,EAAAA,EAAAA,YAAWG,EAAAA,GAEzBC,EAAY,eAAAC,GAAAC,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAC,EAAOC,GAAC,IAAAC,EAAA,OAAAJ,EAAAA,EAAAA,KAAAK,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACP,OAAlBL,EAAEM,iBAAgBH,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAGSE,EAAAA,EAAAA,KAAW,eAAgB,CAC9C1B,MAAAA,EACAI,KAAAA,EACAuB,MAAOhB,EAAYiB,KAAKD,QAC1B,OAJIP,EAAQE,EAAAO,KAMdC,QAAQC,IAAI,yBACZ9B,EAAS,IACTI,EAAQ,IAGRG,EAAe,CACXwB,KAAM,eACNC,MAAO,CAAEC,QAAS,6BAA8BC,MAAO,aAG3D7B,EAAS,SAAD8B,OAAUhB,EAASiB,OAAQf,EAAAE,KAAA,iBAAAF,EAAAC,KAAA,GAAAD,EAAAgB,GAAAhB,EAAA,SAGnCQ,QAAQC,IAAI,wBAAuB,yBAAAT,EAAAiB,OAAA,GAAArB,EAAA,mBAE1C,gBAzBiBsB,GAAA,OAAA1B,EAAA2B,MAAA,KAAAC,UAAA,KA2BlB,OACIC,EAAAA,EAAAA,KAACC,EAAAA,EAAI,CAAC5C,MAAM,kBAAiB6C,UACzBC,EAAAA,EAAAA,MAAA,QAAMC,SAAUlC,EAAagC,SAAA,EACzBC,EAAAA,EAAAA,MAAA,OAAKE,UAAU,aAAYH,SAAA,EACvBF,EAAAA,EAAAA,KAAA,SAAOM,QAAQ,aAAaD,UAAU,kBAAiBH,UACnDF,EAAAA,EAAAA,KAAA,SAAAE,SAAO,aAEXF,EAAAA,EAAAA,KAAA,SAAOO,WAAS,EAACC,SAAU,SAAAhC,GAAC,OAAIlB,EAASkB,EAAEiC,OAAOnB,MAAM,EAAEoB,KAAK,QAAQpB,MAAOjC,EAAOsD,GAAG,aAAaN,UAAU,kDAAkDhB,KAAK,OAAOuB,YAAY,GAAGC,aAAa,YAG7MV,EAAAA,EAAAA,MAAA,OAAKE,UAAU,aAAYH,SAAA,EACvBF,EAAAA,EAAAA,KAAA,SAAOM,QAAQ,YAAYD,UAAU,0BAAyBH,UAC1DF,EAAAA,EAAAA,KAAA,SAAAE,SAAO,oBAEXF,EAAAA,EAAAA,KAAA,YAAUQ,SAAU,SAAAhC,GAAC,OAAId,EAAQc,EAAEiC,OAAOnB,MAAM,EAAEoB,KAAK,OAAOpB,MAAO7B,EAAMkD,GAAG,YAAYN,UAAU,0CAA0ChB,KAAK,aAGvJW,EAAAA,EAAAA,KAAA,UAAQK,UAAU,kBAAiBH,SAAC,sBAIpD,C","sources":["components/CreatePost.jsx"],"sourcesContent":["import React, { useState, useContext } from 'react'\r\nimport { useNavigate } from 'react-router-dom'\r\nimport DispatchContext from '../DispatchContext'\r\nimport StateContext from '../StateContext'\r\nimport Axios from 'axios'\r\nimport Page from './Page'\r\n\r\nconst CreatePost = (props) => {\r\n    const [title, setTitle] = useState(\"\")\r\n    const [body, setBody] = useState(\"\")\r\n\r\n    const navigate = useNavigate();\r\n    // Get state update logic (previously methods in pure Context) from the Context (combined with Reducer)\r\n    const globalDispatch = useContext(DispatchContext)\r\n    const globalState = useContext(StateContext)\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault()\r\n\r\n        try {\r\n            const response = await Axios.post(\"/create-post\", {\r\n                title,\r\n                body,\r\n                token: globalState.user.token\r\n            })\r\n            // console.log(response) // post id returned in response.data\r\n            console.log(\"New post was created!\")\r\n            setTitle(\"\")\r\n            setBody(\"\")\r\n\r\n            // addFlashMessage(\"Post successfully created!\") // use globalDispatch instead\r\n            globalDispatch({\r\n                type: \"flashMessage\",\r\n                value: { message: \"Post successfully created!\", color: \"success\"}\r\n            })\r\n            // Redirect to new post url\r\n            navigate(`/post/${response.data}`);\r\n\r\n        } catch (err) {\r\n            console.log(\"There was a problem.\")\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Page title=\"Create New Post\">\r\n            <form onSubmit={handleSubmit}>\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"post-title\" className=\"text-muted mb-1\">\r\n                        <small>Title</small>\r\n                    </label>\r\n                    <input autoFocus onChange={e => setTitle(e.target.value)} name=\"title\" value={title} id=\"post-title\" className=\"form-control form-control-lg form-control-title\" type=\"text\" placeholder=\"\" autoComplete=\"off\" />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"post-body\" className=\"text-muted mb-1 d-block\">\r\n                        <small>Body Content</small>\r\n                    </label>\r\n                    <textarea onChange={e => setBody(e.target.value)} name=\"body\" value={body} id=\"post-body\" className=\"body-content tall-textarea form-control\" type=\"text\"></textarea>\r\n                </div>\r\n\r\n                <button className=\"btn btn-primary\">Save New Post</button>\r\n            </form>\r\n        </Page>\r\n    )\r\n}\r\n\r\nexport default CreatePost"],"names":["props","_useState","useState","_useState2","_slicedToArray","title","setTitle","_useState3","_useState4","body","setBody","navigate","useNavigate","globalDispatch","useContext","DispatchContext","globalState","StateContext","handleSubmit","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","e","response","wrap","_context","prev","next","preventDefault","Axios","token","user","sent","console","log","type","value","message","color","concat","data","t0","stop","_x","apply","arguments","_jsx","Page","children","_jsxs","onSubmit","className","htmlFor","autoFocus","onChange","target","name","id","placeholder","autoComplete"],"sourceRoot":""}