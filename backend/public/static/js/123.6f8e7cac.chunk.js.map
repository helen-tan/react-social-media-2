{"version":3,"file":"static/js/123.6f8e7cac.chunk.js","mappings":"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","sources":["../node_modules/@babel/runtime/helpers/esm/get.js","../node_modules/@babel/runtime/helpers/esm/superPropBase.js","../node_modules/engine.io-parser/build/esm/commons.js","../node_modules/engine.io-parser/build/esm/contrib/base64-arraybuffer.js","../node_modules/engine.io-parser/build/esm/encodePacket.browser.js","../node_modules/engine.io-parser/build/esm/decodePacket.browser.js","../node_modules/engine.io-parser/build/esm/index.js","../node_modules/@socket.io/component-emitter/index.mjs","../node_modules/engine.io-client/build/esm/globalThis.browser.js","../node_modules/engine.io-client/build/esm/util.js","../node_modules/engine.io-client/build/esm/transport.js","../node_modules/engine.io-client/build/esm/contrib/yeast.js","../node_modules/engine.io-client/build/esm/contrib/parseqs.js","../node_modules/engine.io-client/build/esm/contrib/has-cors.js","../node_modules/engine.io-client/build/esm/transports/xmlhttprequest.browser.js","../node_modules/engine.io-client/build/esm/transports/polling.js","../node_modules/engine.io-client/build/esm/transports/websocket-constructor.browser.js","../node_modules/engine.io-client/build/esm/transports/websocket.js","../node_modules/engine.io-client/build/esm/transports/index.js","../node_modules/engine.io-client/build/esm/contrib/parseuri.js","../node_modules/engine.io-client/build/esm/socket.js","../node_modules/engine.io-client/build/esm/index.js","../node_modules/socket.io-parser/build/esm/is-binary.js","../node_modules/socket.io-parser/build/esm/binary.js","../node_modules/socket.io-parser/build/esm/index.js","../node_modules/socket.io-client/build/esm/on.js","../node_modules/socket.io-client/build/esm/socket.js","../node_modules/socket.io-client/build/esm/contrib/backo2.js","../node_modules/socket.io-client/build/esm/manager.js","../node_modules/socket.io-client/build/esm/index.js","../node_modules/socket.io-client/build/esm/url.js"],"sourcesContent":["import superPropBase from \"./superPropBase.js\";\nexport default function _get() {\n  if (typeof Reflect !== \"undefined\" && Reflect.get) {\n    _get = Reflect.get.bind();\n  } else {\n    _get = function _get(target, property, receiver) {\n      var base = superPropBase(target, property);\n      if (!base) return;\n      var desc = Object.getOwnPropertyDescriptor(base, property);\n      if (desc.get) {\n        return desc.get.call(arguments.length < 3 ? target : receiver);\n      }\n      return desc.value;\n    };\n  }\n  return _get.apply(this, arguments);\n}","import getPrototypeOf from \"./getPrototypeOf.js\";\nexport default function _superPropBase(object, property) {\n  while (!Object.prototype.hasOwnProperty.call(object, property)) {\n    object = getPrototypeOf(object);\n    if (object === null) break;\n  }\n  return object;\n}","const PACKET_TYPES = Object.create(null); // no Map = no polyfill\nPACKET_TYPES[\"open\"] = \"0\";\nPACKET_TYPES[\"close\"] = \"1\";\nPACKET_TYPES[\"ping\"] = \"2\";\nPACKET_TYPES[\"pong\"] = \"3\";\nPACKET_TYPES[\"message\"] = \"4\";\nPACKET_TYPES[\"upgrade\"] = \"5\";\nPACKET_TYPES[\"noop\"] = \"6\";\nconst PACKET_TYPES_REVERSE = Object.create(null);\nObject.keys(PACKET_TYPES).forEach(key => {\n    PACKET_TYPES_REVERSE[PACKET_TYPES[key]] = key;\n});\nconst ERROR_PACKET = { type: \"error\", data: \"parser error\" };\nexport { PACKET_TYPES, PACKET_TYPES_REVERSE, ERROR_PACKET };\n","// imported from https://github.com/socketio/base64-arraybuffer\nconst chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n// Use a lookup table to find the index.\nconst lookup = typeof Uint8Array === 'undefined' ? [] : new Uint8Array(256);\nfor (let i = 0; i < chars.length; i++) {\n    lookup[chars.charCodeAt(i)] = i;\n}\nexport const encode = (arraybuffer) => {\n    let bytes = new Uint8Array(arraybuffer), i, len = bytes.length, base64 = '';\n    for (i = 0; i < len; i += 3) {\n        base64 += chars[bytes[i] >> 2];\n        base64 += chars[((bytes[i] & 3) << 4) | (bytes[i + 1] >> 4)];\n        base64 += chars[((bytes[i + 1] & 15) << 2) | (bytes[i + 2] >> 6)];\n        base64 += chars[bytes[i + 2] & 63];\n    }\n    if (len % 3 === 2) {\n        base64 = base64.substring(0, base64.length - 1) + '=';\n    }\n    else if (len % 3 === 1) {\n        base64 = base64.substring(0, base64.length - 2) + '==';\n    }\n    return base64;\n};\nexport const decode = (base64) => {\n    let bufferLength = base64.length * 0.75, len = base64.length, i, p = 0, encoded1, encoded2, encoded3, encoded4;\n    if (base64[base64.length - 1] === '=') {\n        bufferLength--;\n        if (base64[base64.length - 2] === '=') {\n            bufferLength--;\n        }\n    }\n    const arraybuffer = new ArrayBuffer(bufferLength), bytes = new Uint8Array(arraybuffer);\n    for (i = 0; i < len; i += 4) {\n        encoded1 = lookup[base64.charCodeAt(i)];\n        encoded2 = lookup[base64.charCodeAt(i + 1)];\n        encoded3 = lookup[base64.charCodeAt(i + 2)];\n        encoded4 = lookup[base64.charCodeAt(i + 3)];\n        bytes[p++] = (encoded1 << 2) | (encoded2 >> 4);\n        bytes[p++] = ((encoded2 & 15) << 4) | (encoded3 >> 2);\n        bytes[p++] = ((encoded3 & 3) << 6) | (encoded4 & 63);\n    }\n    return arraybuffer;\n};\n","import { PACKET_TYPES } from \"./commons.js\";\nconst withNativeBlob = typeof Blob === \"function\" ||\n    (typeof Blob !== \"undefined\" &&\n        Object.prototype.toString.call(Blob) === \"[object BlobConstructor]\");\nconst withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\n// ArrayBuffer.isView method is not defined in IE10\nconst isView = obj => {\n    return typeof ArrayBuffer.isView === \"function\"\n        ? ArrayBuffer.isView(obj)\n        : obj && obj.buffer instanceof ArrayBuffer;\n};\nconst encodePacket = ({ type, data }, supportsBinary, callback) => {\n    if (withNativeBlob && data instanceof Blob) {\n        if (supportsBinary) {\n            return callback(data);\n        }\n        else {\n            return encodeBlobAsBase64(data, callback);\n        }\n    }\n    else if (withNativeArrayBuffer &&\n        (data instanceof ArrayBuffer || isView(data))) {\n        if (supportsBinary) {\n            return callback(data);\n        }\n        else {\n            return encodeBlobAsBase64(new Blob([data]), callback);\n        }\n    }\n    // plain string\n    return callback(PACKET_TYPES[type] + (data || \"\"));\n};\nconst encodeBlobAsBase64 = (data, callback) => {\n    const fileReader = new FileReader();\n    fileReader.onload = function () {\n        const content = fileReader.result.split(\",\")[1];\n        callback(\"b\" + (content || \"\"));\n    };\n    return fileReader.readAsDataURL(data);\n};\nexport default encodePacket;\n","import { ERROR_PACKET, PACKET_TYPES_REVERSE } from \"./commons.js\";\nimport { decode } from \"./contrib/base64-arraybuffer.js\";\nconst withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\nconst decodePacket = (encodedPacket, binaryType) => {\n    if (typeof encodedPacket !== \"string\") {\n        return {\n            type: \"message\",\n            data: mapBinary(encodedPacket, binaryType)\n        };\n    }\n    const type = encodedPacket.charAt(0);\n    if (type === \"b\") {\n        return {\n            type: \"message\",\n            data: decodeBase64Packet(encodedPacket.substring(1), binaryType)\n        };\n    }\n    const packetType = PACKET_TYPES_REVERSE[type];\n    if (!packetType) {\n        return ERROR_PACKET;\n    }\n    return encodedPacket.length > 1\n        ? {\n            type: PACKET_TYPES_REVERSE[type],\n            data: encodedPacket.substring(1)\n        }\n        : {\n            type: PACKET_TYPES_REVERSE[type]\n        };\n};\nconst decodeBase64Packet = (data, binaryType) => {\n    if (withNativeArrayBuffer) {\n        const decoded = decode(data);\n        return mapBinary(decoded, binaryType);\n    }\n    else {\n        return { base64: true, data }; // fallback for old browsers\n    }\n};\nconst mapBinary = (data, binaryType) => {\n    switch (binaryType) {\n        case \"blob\":\n            return data instanceof ArrayBuffer ? new Blob([data]) : data;\n        case \"arraybuffer\":\n        default:\n            return data; // assuming the data is already an ArrayBuffer\n    }\n};\nexport default decodePacket;\n","import encodePacket from \"./encodePacket.js\";\nimport decodePacket from \"./decodePacket.js\";\nconst SEPARATOR = String.fromCharCode(30); // see https://en.wikipedia.org/wiki/Delimiter#ASCII_delimited_text\nconst encodePayload = (packets, callback) => {\n    // some packets may be added to the array while encoding, so the initial length must be saved\n    const length = packets.length;\n    const encodedPackets = new Array(length);\n    let count = 0;\n    packets.forEach((packet, i) => {\n        // force base64 encoding for binary packets\n        encodePacket(packet, false, encodedPacket => {\n            encodedPackets[i] = encodedPacket;\n            if (++count === length) {\n                callback(encodedPackets.join(SEPARATOR));\n            }\n        });\n    });\n};\nconst decodePayload = (encodedPayload, binaryType) => {\n    const encodedPackets = encodedPayload.split(SEPARATOR);\n    const packets = [];\n    for (let i = 0; i < encodedPackets.length; i++) {\n        const decodedPacket = decodePacket(encodedPackets[i], binaryType);\n        packets.push(decodedPacket);\n        if (decodedPacket.type === \"error\") {\n            break;\n        }\n    }\n    return packets;\n};\nexport const protocol = 4;\nexport { encodePacket, encodePayload, decodePacket, decodePayload };\n","/**\n * Initialize a new `Emitter`.\n *\n * @api public\n */\n\nexport function Emitter(obj) {\n  if (obj) return mixin(obj);\n}\n\n/**\n * Mixin the emitter properties.\n *\n * @param {Object} obj\n * @return {Object}\n * @api private\n */\n\nfunction mixin(obj) {\n  for (var key in Emitter.prototype) {\n    obj[key] = Emitter.prototype[key];\n  }\n  return obj;\n}\n\n/**\n * Listen on the given `event` with `fn`.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.on =\nEmitter.prototype.addEventListener = function(event, fn){\n  this._callbacks = this._callbacks || {};\n  (this._callbacks['$' + event] = this._callbacks['$' + event] || [])\n    .push(fn);\n  return this;\n};\n\n/**\n * Adds an `event` listener that will be invoked a single\n * time then automatically removed.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.once = function(event, fn){\n  function on() {\n    this.off(event, on);\n    fn.apply(this, arguments);\n  }\n\n  on.fn = fn;\n  this.on(event, on);\n  return this;\n};\n\n/**\n * Remove the given callback for `event` or all\n * registered callbacks.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.off =\nEmitter.prototype.removeListener =\nEmitter.prototype.removeAllListeners =\nEmitter.prototype.removeEventListener = function(event, fn){\n  this._callbacks = this._callbacks || {};\n\n  // all\n  if (0 == arguments.length) {\n    this._callbacks = {};\n    return this;\n  }\n\n  // specific event\n  var callbacks = this._callbacks['$' + event];\n  if (!callbacks) return this;\n\n  // remove all handlers\n  if (1 == arguments.length) {\n    delete this._callbacks['$' + event];\n    return this;\n  }\n\n  // remove specific handler\n  var cb;\n  for (var i = 0; i < callbacks.length; i++) {\n    cb = callbacks[i];\n    if (cb === fn || cb.fn === fn) {\n      callbacks.splice(i, 1);\n      break;\n    }\n  }\n\n  // Remove event specific arrays for event types that no\n  // one is subscribed for to avoid memory leak.\n  if (callbacks.length === 0) {\n    delete this._callbacks['$' + event];\n  }\n\n  return this;\n};\n\n/**\n * Emit `event` with the given args.\n *\n * @param {String} event\n * @param {Mixed} ...\n * @return {Emitter}\n */\n\nEmitter.prototype.emit = function(event){\n  this._callbacks = this._callbacks || {};\n\n  var args = new Array(arguments.length - 1)\n    , callbacks = this._callbacks['$' + event];\n\n  for (var i = 1; i < arguments.length; i++) {\n    args[i - 1] = arguments[i];\n  }\n\n  if (callbacks) {\n    callbacks = callbacks.slice(0);\n    for (var i = 0, len = callbacks.length; i < len; ++i) {\n      callbacks[i].apply(this, args);\n    }\n  }\n\n  return this;\n};\n\n// alias used for reserved events (protected method)\nEmitter.prototype.emitReserved = Emitter.prototype.emit;\n\n/**\n * Return array of callbacks for `event`.\n *\n * @param {String} event\n * @return {Array}\n * @api public\n */\n\nEmitter.prototype.listeners = function(event){\n  this._callbacks = this._callbacks || {};\n  return this._callbacks['$' + event] || [];\n};\n\n/**\n * Check if this emitter has `event` handlers.\n *\n * @param {String} event\n * @return {Boolean}\n * @api public\n */\n\nEmitter.prototype.hasListeners = function(event){\n  return !! this.listeners(event).length;\n};\n","export const globalThisShim = (() => {\n    if (typeof self !== \"undefined\") {\n        return self;\n    }\n    else if (typeof window !== \"undefined\") {\n        return window;\n    }\n    else {\n        return Function(\"return this\")();\n    }\n})();\n","import { globalThisShim as globalThis } from \"./globalThis.js\";\nexport function pick(obj, ...attr) {\n    return attr.reduce((acc, k) => {\n        if (obj.hasOwnProperty(k)) {\n            acc[k] = obj[k];\n        }\n        return acc;\n    }, {});\n}\n// Keep a reference to the real timeout functions so they can be used when overridden\nconst NATIVE_SET_TIMEOUT = globalThis.setTimeout;\nconst NATIVE_CLEAR_TIMEOUT = globalThis.clearTimeout;\nexport function installTimerFunctions(obj, opts) {\n    if (opts.useNativeTimers) {\n        obj.setTimeoutFn = NATIVE_SET_TIMEOUT.bind(globalThis);\n        obj.clearTimeoutFn = NATIVE_CLEAR_TIMEOUT.bind(globalThis);\n    }\n    else {\n        obj.setTimeoutFn = globalThis.setTimeout.bind(globalThis);\n        obj.clearTimeoutFn = globalThis.clearTimeout.bind(globalThis);\n    }\n}\n// base64 encoded buffers are about 33% bigger (https://en.wikipedia.org/wiki/Base64)\nconst BASE64_OVERHEAD = 1.33;\n// we could also have used `new Blob([obj]).size`, but it isn't supported in IE9\nexport function byteLength(obj) {\n    if (typeof obj === \"string\") {\n        return utf8Length(obj);\n    }\n    // arraybuffer or blob\n    return Math.ceil((obj.byteLength || obj.size) * BASE64_OVERHEAD);\n}\nfunction utf8Length(str) {\n    let c = 0, length = 0;\n    for (let i = 0, l = str.length; i < l; i++) {\n        c = str.charCodeAt(i);\n        if (c < 0x80) {\n            length += 1;\n        }\n        else if (c < 0x800) {\n            length += 2;\n        }\n        else if (c < 0xd800 || c >= 0xe000) {\n            length += 3;\n        }\n        else {\n            i++;\n            length += 4;\n        }\n    }\n    return length;\n}\n","import { decodePacket } from \"engine.io-parser\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { installTimerFunctions } from \"./util.js\";\nclass TransportError extends Error {\n    constructor(reason, description, context) {\n        super(reason);\n        this.description = description;\n        this.context = context;\n        this.type = \"TransportError\";\n    }\n}\nexport class Transport extends Emitter {\n    /**\n     * Transport abstract constructor.\n     *\n     * @param {Object} opts - options\n     * @protected\n     */\n    constructor(opts) {\n        super();\n        this.writable = false;\n        installTimerFunctions(this, opts);\n        this.opts = opts;\n        this.query = opts.query;\n        this.socket = opts.socket;\n    }\n    /**\n     * Emits an error.\n     *\n     * @param {String} reason\n     * @param description\n     * @param context - the error context\n     * @return {Transport} for chaining\n     * @protected\n     */\n    onError(reason, description, context) {\n        super.emitReserved(\"error\", new TransportError(reason, description, context));\n        return this;\n    }\n    /**\n     * Opens the transport.\n     */\n    open() {\n        this.readyState = \"opening\";\n        this.doOpen();\n        return this;\n    }\n    /**\n     * Closes the transport.\n     */\n    close() {\n        if (this.readyState === \"opening\" || this.readyState === \"open\") {\n            this.doClose();\n            this.onClose();\n        }\n        return this;\n    }\n    /**\n     * Sends multiple packets.\n     *\n     * @param {Array} packets\n     */\n    send(packets) {\n        if (this.readyState === \"open\") {\n            this.write(packets);\n        }\n        else {\n            // this might happen if the transport was silently closed in the beforeunload event handler\n        }\n    }\n    /**\n     * Called upon open\n     *\n     * @protected\n     */\n    onOpen() {\n        this.readyState = \"open\";\n        this.writable = true;\n        super.emitReserved(\"open\");\n    }\n    /**\n     * Called with data.\n     *\n     * @param {String} data\n     * @protected\n     */\n    onData(data) {\n        const packet = decodePacket(data, this.socket.binaryType);\n        this.onPacket(packet);\n    }\n    /**\n     * Called with a decoded packet.\n     *\n     * @protected\n     */\n    onPacket(packet) {\n        super.emitReserved(\"packet\", packet);\n    }\n    /**\n     * Called upon close.\n     *\n     * @protected\n     */\n    onClose(details) {\n        this.readyState = \"closed\";\n        super.emitReserved(\"close\", details);\n    }\n    /**\n     * Pauses the transport, in order not to lose packets during an upgrade.\n     *\n     * @param onPause\n     */\n    pause(onPause) { }\n}\n","// imported from https://github.com/unshiftio/yeast\n'use strict';\nconst alphabet = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz-_'.split(''), length = 64, map = {};\nlet seed = 0, i = 0, prev;\n/**\n * Return a string representing the specified number.\n *\n * @param {Number} num The number to convert.\n * @returns {String} The string representation of the number.\n * @api public\n */\nexport function encode(num) {\n    let encoded = '';\n    do {\n        encoded = alphabet[num % length] + encoded;\n        num = Math.floor(num / length);\n    } while (num > 0);\n    return encoded;\n}\n/**\n * Return the integer value specified by the given string.\n *\n * @param {String} str The string to convert.\n * @returns {Number} The integer value represented by the string.\n * @api public\n */\nexport function decode(str) {\n    let decoded = 0;\n    for (i = 0; i < str.length; i++) {\n        decoded = decoded * length + map[str.charAt(i)];\n    }\n    return decoded;\n}\n/**\n * Yeast: A tiny growing id generator.\n *\n * @returns {String} A unique id.\n * @api public\n */\nexport function yeast() {\n    const now = encode(+new Date());\n    if (now !== prev)\n        return seed = 0, prev = now;\n    return now + '.' + encode(seed++);\n}\n//\n// Map each character to its index.\n//\nfor (; i < length; i++)\n    map[alphabet[i]] = i;\n","// imported from https://github.com/galkn/querystring\n/**\n * Compiles a querystring\n * Returns string representation of the object\n *\n * @param {Object}\n * @api private\n */\nexport function encode(obj) {\n    let str = '';\n    for (let i in obj) {\n        if (obj.hasOwnProperty(i)) {\n            if (str.length)\n                str += '&';\n            str += encodeURIComponent(i) + '=' + encodeURIComponent(obj[i]);\n        }\n    }\n    return str;\n}\n/**\n * Parses a simple querystring into an object\n *\n * @param {String} qs\n * @api private\n */\nexport function decode(qs) {\n    let qry = {};\n    let pairs = qs.split('&');\n    for (let i = 0, l = pairs.length; i < l; i++) {\n        let pair = pairs[i].split('=');\n        qry[decodeURIComponent(pair[0])] = decodeURIComponent(pair[1]);\n    }\n    return qry;\n}\n","// imported from https://github.com/component/has-cors\nlet value = false;\ntry {\n    value = typeof XMLHttpRequest !== 'undefined' &&\n        'withCredentials' in new XMLHttpRequest();\n}\ncatch (err) {\n    // if XMLHttp support is disabled in IE then it will throw\n    // when trying to create\n}\nexport const hasCORS = value;\n","// browser shim for xmlhttprequest module\nimport { hasCORS } from \"../contrib/has-cors.js\";\nimport { globalThisShim as globalThis } from \"../globalThis.js\";\nexport function XHR(opts) {\n    const xdomain = opts.xdomain;\n    // XMLHttpRequest can be disabled on IE\n    try {\n        if (\"undefined\" !== typeof XMLHttpRequest && (!xdomain || hasCORS)) {\n            return new XMLHttpRequest();\n        }\n    }\n    catch (e) { }\n    if (!xdomain) {\n        try {\n            return new globalThis[[\"Active\"].concat(\"Object\").join(\"X\")](\"Microsoft.XMLHTTP\");\n        }\n        catch (e) { }\n    }\n}\n","import { Transport } from \"../transport.js\";\nimport { yeast } from \"../contrib/yeast.js\";\nimport { encode } from \"../contrib/parseqs.js\";\nimport { encodePayload, decodePayload } from \"engine.io-parser\";\nimport { XHR as XMLHttpRequest } from \"./xmlhttprequest.js\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { installTimerFunctions, pick } from \"../util.js\";\nimport { globalThisShim as globalThis } from \"../globalThis.js\";\nfunction empty() { }\nconst hasXHR2 = (function () {\n    const xhr = new XMLHttpRequest({\n        xdomain: false,\n    });\n    return null != xhr.responseType;\n})();\nexport class Polling extends Transport {\n    /**\n     * XHR Polling constructor.\n     *\n     * @param {Object} opts\n     * @package\n     */\n    constructor(opts) {\n        super(opts);\n        this.polling = false;\n        if (typeof location !== \"undefined\") {\n            const isSSL = \"https:\" === location.protocol;\n            let port = location.port;\n            // some user agents have empty `location.port`\n            if (!port) {\n                port = isSSL ? \"443\" : \"80\";\n            }\n            this.xd =\n                (typeof location !== \"undefined\" &&\n                    opts.hostname !== location.hostname) ||\n                    port !== opts.port;\n            this.xs = opts.secure !== isSSL;\n        }\n        /**\n         * XHR supports binary\n         */\n        const forceBase64 = opts && opts.forceBase64;\n        this.supportsBinary = hasXHR2 && !forceBase64;\n    }\n    get name() {\n        return \"polling\";\n    }\n    /**\n     * Opens the socket (triggers polling). We write a PING message to determine\n     * when the transport is open.\n     *\n     * @protected\n     */\n    doOpen() {\n        this.poll();\n    }\n    /**\n     * Pauses polling.\n     *\n     * @param {Function} onPause - callback upon buffers are flushed and transport is paused\n     * @package\n     */\n    pause(onPause) {\n        this.readyState = \"pausing\";\n        const pause = () => {\n            this.readyState = \"paused\";\n            onPause();\n        };\n        if (this.polling || !this.writable) {\n            let total = 0;\n            if (this.polling) {\n                total++;\n                this.once(\"pollComplete\", function () {\n                    --total || pause();\n                });\n            }\n            if (!this.writable) {\n                total++;\n                this.once(\"drain\", function () {\n                    --total || pause();\n                });\n            }\n        }\n        else {\n            pause();\n        }\n    }\n    /**\n     * Starts polling cycle.\n     *\n     * @private\n     */\n    poll() {\n        this.polling = true;\n        this.doPoll();\n        this.emitReserved(\"poll\");\n    }\n    /**\n     * Overloads onData to detect payloads.\n     *\n     * @protected\n     */\n    onData(data) {\n        const callback = (packet) => {\n            // if its the first message we consider the transport open\n            if (\"opening\" === this.readyState && packet.type === \"open\") {\n                this.onOpen();\n            }\n            // if its a close packet, we close the ongoing requests\n            if (\"close\" === packet.type) {\n                this.onClose({ description: \"transport closed by the server\" });\n                return false;\n            }\n            // otherwise bypass onData and handle the message\n            this.onPacket(packet);\n        };\n        // decode payload\n        decodePayload(data, this.socket.binaryType).forEach(callback);\n        // if an event did not trigger closing\n        if (\"closed\" !== this.readyState) {\n            // if we got data we're not polling\n            this.polling = false;\n            this.emitReserved(\"pollComplete\");\n            if (\"open\" === this.readyState) {\n                this.poll();\n            }\n            else {\n            }\n        }\n    }\n    /**\n     * For polling, send a close packet.\n     *\n     * @protected\n     */\n    doClose() {\n        const close = () => {\n            this.write([{ type: \"close\" }]);\n        };\n        if (\"open\" === this.readyState) {\n            close();\n        }\n        else {\n            // in case we're trying to close while\n            // handshaking is in progress (GH-164)\n            this.once(\"open\", close);\n        }\n    }\n    /**\n     * Writes a packets payload.\n     *\n     * @param {Array} packets - data packets\n     * @protected\n     */\n    write(packets) {\n        this.writable = false;\n        encodePayload(packets, (data) => {\n            this.doWrite(data, () => {\n                this.writable = true;\n                this.emitReserved(\"drain\");\n            });\n        });\n    }\n    /**\n     * Generates uri for connection.\n     *\n     * @private\n     */\n    uri() {\n        let query = this.query || {};\n        const schema = this.opts.secure ? \"https\" : \"http\";\n        let port = \"\";\n        // cache busting is forced\n        if (false !== this.opts.timestampRequests) {\n            query[this.opts.timestampParam] = yeast();\n        }\n        if (!this.supportsBinary && !query.sid) {\n            query.b64 = 1;\n        }\n        // avoid port if default for schema\n        if (this.opts.port &&\n            ((\"https\" === schema && Number(this.opts.port) !== 443) ||\n                (\"http\" === schema && Number(this.opts.port) !== 80))) {\n            port = \":\" + this.opts.port;\n        }\n        const encodedQuery = encode(query);\n        const ipv6 = this.opts.hostname.indexOf(\":\") !== -1;\n        return (schema +\n            \"://\" +\n            (ipv6 ? \"[\" + this.opts.hostname + \"]\" : this.opts.hostname) +\n            port +\n            this.opts.path +\n            (encodedQuery.length ? \"?\" + encodedQuery : \"\"));\n    }\n    /**\n     * Creates a request.\n     *\n     * @param {String} method\n     * @private\n     */\n    request(opts = {}) {\n        Object.assign(opts, { xd: this.xd, xs: this.xs }, this.opts);\n        return new Request(this.uri(), opts);\n    }\n    /**\n     * Sends data.\n     *\n     * @param {String} data to send.\n     * @param {Function} called upon flush.\n     * @private\n     */\n    doWrite(data, fn) {\n        const req = this.request({\n            method: \"POST\",\n            data: data,\n        });\n        req.on(\"success\", fn);\n        req.on(\"error\", (xhrStatus, context) => {\n            this.onError(\"xhr post error\", xhrStatus, context);\n        });\n    }\n    /**\n     * Starts a poll cycle.\n     *\n     * @private\n     */\n    doPoll() {\n        const req = this.request();\n        req.on(\"data\", this.onData.bind(this));\n        req.on(\"error\", (xhrStatus, context) => {\n            this.onError(\"xhr poll error\", xhrStatus, context);\n        });\n        this.pollXhr = req;\n    }\n}\nexport class Request extends Emitter {\n    /**\n     * Request constructor\n     *\n     * @param {Object} options\n     * @package\n     */\n    constructor(uri, opts) {\n        super();\n        installTimerFunctions(this, opts);\n        this.opts = opts;\n        this.method = opts.method || \"GET\";\n        this.uri = uri;\n        this.async = false !== opts.async;\n        this.data = undefined !== opts.data ? opts.data : null;\n        this.create();\n    }\n    /**\n     * Creates the XHR object and sends the request.\n     *\n     * @private\n     */\n    create() {\n        const opts = pick(this.opts, \"agent\", \"pfx\", \"key\", \"passphrase\", \"cert\", \"ca\", \"ciphers\", \"rejectUnauthorized\", \"autoUnref\");\n        opts.xdomain = !!this.opts.xd;\n        opts.xscheme = !!this.opts.xs;\n        const xhr = (this.xhr = new XMLHttpRequest(opts));\n        try {\n            xhr.open(this.method, this.uri, this.async);\n            try {\n                if (this.opts.extraHeaders) {\n                    xhr.setDisableHeaderCheck && xhr.setDisableHeaderCheck(true);\n                    for (let i in this.opts.extraHeaders) {\n                        if (this.opts.extraHeaders.hasOwnProperty(i)) {\n                            xhr.setRequestHeader(i, this.opts.extraHeaders[i]);\n                        }\n                    }\n                }\n            }\n            catch (e) { }\n            if (\"POST\" === this.method) {\n                try {\n                    xhr.setRequestHeader(\"Content-type\", \"text/plain;charset=UTF-8\");\n                }\n                catch (e) { }\n            }\n            try {\n                xhr.setRequestHeader(\"Accept\", \"*/*\");\n            }\n            catch (e) { }\n            // ie6 check\n            if (\"withCredentials\" in xhr) {\n                xhr.withCredentials = this.opts.withCredentials;\n            }\n            if (this.opts.requestTimeout) {\n                xhr.timeout = this.opts.requestTimeout;\n            }\n            xhr.onreadystatechange = () => {\n                if (4 !== xhr.readyState)\n                    return;\n                if (200 === xhr.status || 1223 === xhr.status) {\n                    this.onLoad();\n                }\n                else {\n                    // make sure the `error` event handler that's user-set\n                    // does not throw in the same tick and gets caught here\n                    this.setTimeoutFn(() => {\n                        this.onError(typeof xhr.status === \"number\" ? xhr.status : 0);\n                    }, 0);\n                }\n            };\n            xhr.send(this.data);\n        }\n        catch (e) {\n            // Need to defer since .create() is called directly from the constructor\n            // and thus the 'error' event can only be only bound *after* this exception\n            // occurs.  Therefore, also, we cannot throw here at all.\n            this.setTimeoutFn(() => {\n                this.onError(e);\n            }, 0);\n            return;\n        }\n        if (typeof document !== \"undefined\") {\n            this.index = Request.requestsCount++;\n            Request.requests[this.index] = this;\n        }\n    }\n    /**\n     * Called upon error.\n     *\n     * @private\n     */\n    onError(err) {\n        this.emitReserved(\"error\", err, this.xhr);\n        this.cleanup(true);\n    }\n    /**\n     * Cleans up house.\n     *\n     * @private\n     */\n    cleanup(fromError) {\n        if (\"undefined\" === typeof this.xhr || null === this.xhr) {\n            return;\n        }\n        this.xhr.onreadystatechange = empty;\n        if (fromError) {\n            try {\n                this.xhr.abort();\n            }\n            catch (e) { }\n        }\n        if (typeof document !== \"undefined\") {\n            delete Request.requests[this.index];\n        }\n        this.xhr = null;\n    }\n    /**\n     * Called upon load.\n     *\n     * @private\n     */\n    onLoad() {\n        const data = this.xhr.responseText;\n        if (data !== null) {\n            this.emitReserved(\"data\", data);\n            this.emitReserved(\"success\");\n            this.cleanup();\n        }\n    }\n    /**\n     * Aborts the request.\n     *\n     * @package\n     */\n    abort() {\n        this.cleanup();\n    }\n}\nRequest.requestsCount = 0;\nRequest.requests = {};\n/**\n * Aborts pending requests when unloading the window. This is needed to prevent\n * memory leaks (e.g. when using IE) and to ensure that no spurious error is\n * emitted.\n */\nif (typeof document !== \"undefined\") {\n    // @ts-ignore\n    if (typeof attachEvent === \"function\") {\n        // @ts-ignore\n        attachEvent(\"onunload\", unloadHandler);\n    }\n    else if (typeof addEventListener === \"function\") {\n        const terminationEvent = \"onpagehide\" in globalThis ? \"pagehide\" : \"unload\";\n        addEventListener(terminationEvent, unloadHandler, false);\n    }\n}\nfunction unloadHandler() {\n    for (let i in Request.requests) {\n        if (Request.requests.hasOwnProperty(i)) {\n            Request.requests[i].abort();\n        }\n    }\n}\n","import { globalThisShim as globalThis } from \"../globalThis.js\";\nexport const nextTick = (() => {\n    const isPromiseAvailable = typeof Promise === \"function\" && typeof Promise.resolve === \"function\";\n    if (isPromiseAvailable) {\n        return (cb) => Promise.resolve().then(cb);\n    }\n    else {\n        return (cb, setTimeoutFn) => setTimeoutFn(cb, 0);\n    }\n})();\nexport const WebSocket = globalThis.WebSocket || globalThis.MozWebSocket;\nexport const usingBrowserWebSocket = true;\nexport const defaultBinaryType = \"arraybuffer\";\n","import { Transport } from \"../transport.js\";\nimport { encode } from \"../contrib/parseqs.js\";\nimport { yeast } from \"../contrib/yeast.js\";\nimport { pick } from \"../util.js\";\nimport { defaultBinaryType, nextTick, usingBrowserWebSocket, WebSocket, } from \"./websocket-constructor.js\";\nimport { encodePacket } from \"engine.io-parser\";\n// detect ReactNative environment\nconst isReactNative = typeof navigator !== \"undefined\" &&\n    typeof navigator.product === \"string\" &&\n    navigator.product.toLowerCase() === \"reactnative\";\nexport class WS extends Transport {\n    /**\n     * WebSocket transport constructor.\n     *\n     * @param {Object} opts - connection options\n     * @protected\n     */\n    constructor(opts) {\n        super(opts);\n        this.supportsBinary = !opts.forceBase64;\n    }\n    get name() {\n        return \"websocket\";\n    }\n    doOpen() {\n        if (!this.check()) {\n            // let probe timeout\n            return;\n        }\n        const uri = this.uri();\n        const protocols = this.opts.protocols;\n        // React Native only supports the 'headers' option, and will print a warning if anything else is passed\n        const opts = isReactNative\n            ? {}\n            : pick(this.opts, \"agent\", \"perMessageDeflate\", \"pfx\", \"key\", \"passphrase\", \"cert\", \"ca\", \"ciphers\", \"rejectUnauthorized\", \"localAddress\", \"protocolVersion\", \"origin\", \"maxPayload\", \"family\", \"checkServerIdentity\");\n        if (this.opts.extraHeaders) {\n            opts.headers = this.opts.extraHeaders;\n        }\n        try {\n            this.ws =\n                usingBrowserWebSocket && !isReactNative\n                    ? protocols\n                        ? new WebSocket(uri, protocols)\n                        : new WebSocket(uri)\n                    : new WebSocket(uri, protocols, opts);\n        }\n        catch (err) {\n            return this.emitReserved(\"error\", err);\n        }\n        this.ws.binaryType = this.socket.binaryType || defaultBinaryType;\n        this.addEventListeners();\n    }\n    /**\n     * Adds event listeners to the socket\n     *\n     * @private\n     */\n    addEventListeners() {\n        this.ws.onopen = () => {\n            if (this.opts.autoUnref) {\n                this.ws._socket.unref();\n            }\n            this.onOpen();\n        };\n        this.ws.onclose = (closeEvent) => this.onClose({\n            description: \"websocket connection closed\",\n            context: closeEvent,\n        });\n        this.ws.onmessage = (ev) => this.onData(ev.data);\n        this.ws.onerror = (e) => this.onError(\"websocket error\", e);\n    }\n    write(packets) {\n        this.writable = false;\n        // encodePacket efficient as it uses WS framing\n        // no need for encodePayload\n        for (let i = 0; i < packets.length; i++) {\n            const packet = packets[i];\n            const lastPacket = i === packets.length - 1;\n            encodePacket(packet, this.supportsBinary, (data) => {\n                // always create a new object (GH-437)\n                const opts = {};\n                if (!usingBrowserWebSocket) {\n                    if (packet.options) {\n                        opts.compress = packet.options.compress;\n                    }\n                    if (this.opts.perMessageDeflate) {\n                        const len = \n                        // @ts-ignore\n                        \"string\" === typeof data ? Buffer.byteLength(data) : data.length;\n                        if (len < this.opts.perMessageDeflate.threshold) {\n                            opts.compress = false;\n                        }\n                    }\n                }\n                // Sometimes the websocket has already been closed but the browser didn't\n                // have a chance of informing us about it yet, in that case send will\n                // throw an error\n                try {\n                    if (usingBrowserWebSocket) {\n                        // TypeError is thrown when passing the second argument on Safari\n                        this.ws.send(data);\n                    }\n                    else {\n                        this.ws.send(data, opts);\n                    }\n                }\n                catch (e) {\n                }\n                if (lastPacket) {\n                    // fake drain\n                    // defer to next tick to allow Socket to clear writeBuffer\n                    nextTick(() => {\n                        this.writable = true;\n                        this.emitReserved(\"drain\");\n                    }, this.setTimeoutFn);\n                }\n            });\n        }\n    }\n    doClose() {\n        if (typeof this.ws !== \"undefined\") {\n            this.ws.close();\n            this.ws = null;\n        }\n    }\n    /**\n     * Generates uri for connection.\n     *\n     * @private\n     */\n    uri() {\n        let query = this.query || {};\n        const schema = this.opts.secure ? \"wss\" : \"ws\";\n        let port = \"\";\n        // avoid port if default for schema\n        if (this.opts.port &&\n            ((\"wss\" === schema && Number(this.opts.port) !== 443) ||\n                (\"ws\" === schema && Number(this.opts.port) !== 80))) {\n            port = \":\" + this.opts.port;\n        }\n        // append timestamp to URI\n        if (this.opts.timestampRequests) {\n            query[this.opts.timestampParam] = yeast();\n        }\n        // communicate binary support capabilities\n        if (!this.supportsBinary) {\n            query.b64 = 1;\n        }\n        const encodedQuery = encode(query);\n        const ipv6 = this.opts.hostname.indexOf(\":\") !== -1;\n        return (schema +\n            \"://\" +\n            (ipv6 ? \"[\" + this.opts.hostname + \"]\" : this.opts.hostname) +\n            port +\n            this.opts.path +\n            (encodedQuery.length ? \"?\" + encodedQuery : \"\"));\n    }\n    /**\n     * Feature detection for WebSocket.\n     *\n     * @return {Boolean} whether this transport is available.\n     * @private\n     */\n    check() {\n        return !!WebSocket;\n    }\n}\n","import { Polling } from \"./polling.js\";\nimport { WS } from \"./websocket.js\";\nexport const transports = {\n    websocket: WS,\n    polling: Polling,\n};\n","// imported from https://github.com/galkn/parseuri\n/**\n * Parses a URI\n *\n * Note: we could also have used the built-in URL object, but it isn't supported on all platforms.\n *\n * See:\n * - https://developer.mozilla.org/en-US/docs/Web/API/URL\n * - https://caniuse.com/url\n * - https://www.rfc-editor.org/rfc/rfc3986#appendix-B\n *\n * History of the parse() method:\n * - first commit: https://github.com/socketio/socket.io-client/commit/4ee1d5d94b3906a9c052b459f1a818b15f38f91c\n * - export into its own module: https://github.com/socketio/engine.io-client/commit/de2c561e4564efeb78f1bdb1ba39ef81b2822cb3\n * - reimport: https://github.com/socketio/engine.io-client/commit/df32277c3f6d622eec5ed09f493cae3f3391d242\n *\n * @author Steven Levithan <stevenlevithan.com> (MIT license)\n * @api private\n */\nconst re = /^(?:(?![^:@\\/?#]+:[^:@\\/]*@)(http|https|ws|wss):\\/\\/)?((?:(([^:@\\/?#]*)(?::([^:@\\/?#]*))?)?@)?((?:[a-f0-9]{0,4}:){2,7}[a-f0-9]{0,4}|[^:\\/?#]*)(?::(\\d*))?)(((\\/(?:[^?#](?![^?#\\/]*\\.[^?#\\/.]+(?:[?#]|$)))*\\/?)?([^?#\\/]*))(?:\\?([^#]*))?(?:#(.*))?)/;\nconst parts = [\n    'source', 'protocol', 'authority', 'userInfo', 'user', 'password', 'host', 'port', 'relative', 'path', 'directory', 'file', 'query', 'anchor'\n];\nexport function parse(str) {\n    const src = str, b = str.indexOf('['), e = str.indexOf(']');\n    if (b != -1 && e != -1) {\n        str = str.substring(0, b) + str.substring(b, e).replace(/:/g, ';') + str.substring(e, str.length);\n    }\n    let m = re.exec(str || ''), uri = {}, i = 14;\n    while (i--) {\n        uri[parts[i]] = m[i] || '';\n    }\n    if (b != -1 && e != -1) {\n        uri.source = src;\n        uri.host = uri.host.substring(1, uri.host.length - 1).replace(/;/g, ':');\n        uri.authority = uri.authority.replace('[', '').replace(']', '').replace(/;/g, ':');\n        uri.ipv6uri = true;\n    }\n    uri.pathNames = pathNames(uri, uri['path']);\n    uri.queryKey = queryKey(uri, uri['query']);\n    return uri;\n}\nfunction pathNames(obj, path) {\n    const regx = /\\/{2,9}/g, names = path.replace(regx, \"/\").split(\"/\");\n    if (path.slice(0, 1) == '/' || path.length === 0) {\n        names.splice(0, 1);\n    }\n    if (path.slice(-1) == '/') {\n        names.splice(names.length - 1, 1);\n    }\n    return names;\n}\nfunction queryKey(uri, query) {\n    const data = {};\n    query.replace(/(?:^|&)([^&=]*)=?([^&]*)/g, function ($0, $1, $2) {\n        if ($1) {\n            data[$1] = $2;\n        }\n    });\n    return data;\n}\n","import { transports } from \"./transports/index.js\";\nimport { installTimerFunctions, byteLength } from \"./util.js\";\nimport { decode } from \"./contrib/parseqs.js\";\nimport { parse } from \"./contrib/parseuri.js\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { protocol } from \"engine.io-parser\";\nexport class Socket extends Emitter {\n    /**\n     * Socket constructor.\n     *\n     * @param {String|Object} uri - uri or options\n     * @param {Object} opts - options\n     */\n    constructor(uri, opts = {}) {\n        super();\n        this.writeBuffer = [];\n        if (uri && \"object\" === typeof uri) {\n            opts = uri;\n            uri = null;\n        }\n        if (uri) {\n            uri = parse(uri);\n            opts.hostname = uri.host;\n            opts.secure = uri.protocol === \"https\" || uri.protocol === \"wss\";\n            opts.port = uri.port;\n            if (uri.query)\n                opts.query = uri.query;\n        }\n        else if (opts.host) {\n            opts.hostname = parse(opts.host).host;\n        }\n        installTimerFunctions(this, opts);\n        this.secure =\n            null != opts.secure\n                ? opts.secure\n                : typeof location !== \"undefined\" && \"https:\" === location.protocol;\n        if (opts.hostname && !opts.port) {\n            // if no port is specified manually, use the protocol default\n            opts.port = this.secure ? \"443\" : \"80\";\n        }\n        this.hostname =\n            opts.hostname ||\n                (typeof location !== \"undefined\" ? location.hostname : \"localhost\");\n        this.port =\n            opts.port ||\n                (typeof location !== \"undefined\" && location.port\n                    ? location.port\n                    : this.secure\n                        ? \"443\"\n                        : \"80\");\n        this.transports = opts.transports || [\"polling\", \"websocket\"];\n        this.writeBuffer = [];\n        this.prevBufferLen = 0;\n        this.opts = Object.assign({\n            path: \"/engine.io\",\n            agent: false,\n            withCredentials: false,\n            upgrade: true,\n            timestampParam: \"t\",\n            rememberUpgrade: false,\n            addTrailingSlash: true,\n            rejectUnauthorized: true,\n            perMessageDeflate: {\n                threshold: 1024,\n            },\n            transportOptions: {},\n            closeOnBeforeunload: true,\n        }, opts);\n        this.opts.path =\n            this.opts.path.replace(/\\/$/, \"\") +\n                (this.opts.addTrailingSlash ? \"/\" : \"\");\n        if (typeof this.opts.query === \"string\") {\n            this.opts.query = decode(this.opts.query);\n        }\n        // set on handshake\n        this.id = null;\n        this.upgrades = null;\n        this.pingInterval = null;\n        this.pingTimeout = null;\n        // set on heartbeat\n        this.pingTimeoutTimer = null;\n        if (typeof addEventListener === \"function\") {\n            if (this.opts.closeOnBeforeunload) {\n                // Firefox closes the connection when the \"beforeunload\" event is emitted but not Chrome. This event listener\n                // ensures every browser behaves the same (no \"disconnect\" event at the Socket.IO level when the page is\n                // closed/reloaded)\n                this.beforeunloadEventListener = () => {\n                    if (this.transport) {\n                        // silently close the transport\n                        this.transport.removeAllListeners();\n                        this.transport.close();\n                    }\n                };\n                addEventListener(\"beforeunload\", this.beforeunloadEventListener, false);\n            }\n            if (this.hostname !== \"localhost\") {\n                this.offlineEventListener = () => {\n                    this.onClose(\"transport close\", {\n                        description: \"network connection lost\",\n                    });\n                };\n                addEventListener(\"offline\", this.offlineEventListener, false);\n            }\n        }\n        this.open();\n    }\n    /**\n     * Creates transport of the given type.\n     *\n     * @param {String} name - transport name\n     * @return {Transport}\n     * @private\n     */\n    createTransport(name) {\n        const query = Object.assign({}, this.opts.query);\n        // append engine.io protocol identifier\n        query.EIO = protocol;\n        // transport name\n        query.transport = name;\n        // session id if we already have one\n        if (this.id)\n            query.sid = this.id;\n        const opts = Object.assign({}, this.opts.transportOptions[name], this.opts, {\n            query,\n            socket: this,\n            hostname: this.hostname,\n            secure: this.secure,\n            port: this.port,\n        });\n        return new transports[name](opts);\n    }\n    /**\n     * Initializes transport to use and starts probe.\n     *\n     * @private\n     */\n    open() {\n        let transport;\n        if (this.opts.rememberUpgrade &&\n            Socket.priorWebsocketSuccess &&\n            this.transports.indexOf(\"websocket\") !== -1) {\n            transport = \"websocket\";\n        }\n        else if (0 === this.transports.length) {\n            // Emit error on next tick so it can be listened to\n            this.setTimeoutFn(() => {\n                this.emitReserved(\"error\", \"No transports available\");\n            }, 0);\n            return;\n        }\n        else {\n            transport = this.transports[0];\n        }\n        this.readyState = \"opening\";\n        // Retry with the next transport if the transport is disabled (jsonp: false)\n        try {\n            transport = this.createTransport(transport);\n        }\n        catch (e) {\n            this.transports.shift();\n            this.open();\n            return;\n        }\n        transport.open();\n        this.setTransport(transport);\n    }\n    /**\n     * Sets the current transport. Disables the existing one (if any).\n     *\n     * @private\n     */\n    setTransport(transport) {\n        if (this.transport) {\n            this.transport.removeAllListeners();\n        }\n        // set up transport\n        this.transport = transport;\n        // set up transport listeners\n        transport\n            .on(\"drain\", this.onDrain.bind(this))\n            .on(\"packet\", this.onPacket.bind(this))\n            .on(\"error\", this.onError.bind(this))\n            .on(\"close\", (reason) => this.onClose(\"transport close\", reason));\n    }\n    /**\n     * Probes a transport.\n     *\n     * @param {String} name - transport name\n     * @private\n     */\n    probe(name) {\n        let transport = this.createTransport(name);\n        let failed = false;\n        Socket.priorWebsocketSuccess = false;\n        const onTransportOpen = () => {\n            if (failed)\n                return;\n            transport.send([{ type: \"ping\", data: \"probe\" }]);\n            transport.once(\"packet\", (msg) => {\n                if (failed)\n                    return;\n                if (\"pong\" === msg.type && \"probe\" === msg.data) {\n                    this.upgrading = true;\n                    this.emitReserved(\"upgrading\", transport);\n                    if (!transport)\n                        return;\n                    Socket.priorWebsocketSuccess = \"websocket\" === transport.name;\n                    this.transport.pause(() => {\n                        if (failed)\n                            return;\n                        if (\"closed\" === this.readyState)\n                            return;\n                        cleanup();\n                        this.setTransport(transport);\n                        transport.send([{ type: \"upgrade\" }]);\n                        this.emitReserved(\"upgrade\", transport);\n                        transport = null;\n                        this.upgrading = false;\n                        this.flush();\n                    });\n                }\n                else {\n                    const err = new Error(\"probe error\");\n                    // @ts-ignore\n                    err.transport = transport.name;\n                    this.emitReserved(\"upgradeError\", err);\n                }\n            });\n        };\n        function freezeTransport() {\n            if (failed)\n                return;\n            // Any callback called by transport should be ignored since now\n            failed = true;\n            cleanup();\n            transport.close();\n            transport = null;\n        }\n        // Handle any error that happens while probing\n        const onerror = (err) => {\n            const error = new Error(\"probe error: \" + err);\n            // @ts-ignore\n            error.transport = transport.name;\n            freezeTransport();\n            this.emitReserved(\"upgradeError\", error);\n        };\n        function onTransportClose() {\n            onerror(\"transport closed\");\n        }\n        // When the socket is closed while we're probing\n        function onclose() {\n            onerror(\"socket closed\");\n        }\n        // When the socket is upgraded while we're probing\n        function onupgrade(to) {\n            if (transport && to.name !== transport.name) {\n                freezeTransport();\n            }\n        }\n        // Remove all listeners on the transport and on self\n        const cleanup = () => {\n            transport.removeListener(\"open\", onTransportOpen);\n            transport.removeListener(\"error\", onerror);\n            transport.removeListener(\"close\", onTransportClose);\n            this.off(\"close\", onclose);\n            this.off(\"upgrading\", onupgrade);\n        };\n        transport.once(\"open\", onTransportOpen);\n        transport.once(\"error\", onerror);\n        transport.once(\"close\", onTransportClose);\n        this.once(\"close\", onclose);\n        this.once(\"upgrading\", onupgrade);\n        transport.open();\n    }\n    /**\n     * Called when connection is deemed open.\n     *\n     * @private\n     */\n    onOpen() {\n        this.readyState = \"open\";\n        Socket.priorWebsocketSuccess = \"websocket\" === this.transport.name;\n        this.emitReserved(\"open\");\n        this.flush();\n        // we check for `readyState` in case an `open`\n        // listener already closed the socket\n        if (\"open\" === this.readyState && this.opts.upgrade) {\n            let i = 0;\n            const l = this.upgrades.length;\n            for (; i < l; i++) {\n                this.probe(this.upgrades[i]);\n            }\n        }\n    }\n    /**\n     * Handles a packet.\n     *\n     * @private\n     */\n    onPacket(packet) {\n        if (\"opening\" === this.readyState ||\n            \"open\" === this.readyState ||\n            \"closing\" === this.readyState) {\n            this.emitReserved(\"packet\", packet);\n            // Socket is live - any packet counts\n            this.emitReserved(\"heartbeat\");\n            switch (packet.type) {\n                case \"open\":\n                    this.onHandshake(JSON.parse(packet.data));\n                    break;\n                case \"ping\":\n                    this.resetPingTimeout();\n                    this.sendPacket(\"pong\");\n                    this.emitReserved(\"ping\");\n                    this.emitReserved(\"pong\");\n                    break;\n                case \"error\":\n                    const err = new Error(\"server error\");\n                    // @ts-ignore\n                    err.code = packet.data;\n                    this.onError(err);\n                    break;\n                case \"message\":\n                    this.emitReserved(\"data\", packet.data);\n                    this.emitReserved(\"message\", packet.data);\n                    break;\n            }\n        }\n        else {\n        }\n    }\n    /**\n     * Called upon handshake completion.\n     *\n     * @param {Object} data - handshake obj\n     * @private\n     */\n    onHandshake(data) {\n        this.emitReserved(\"handshake\", data);\n        this.id = data.sid;\n        this.transport.query.sid = data.sid;\n        this.upgrades = this.filterUpgrades(data.upgrades);\n        this.pingInterval = data.pingInterval;\n        this.pingTimeout = data.pingTimeout;\n        this.maxPayload = data.maxPayload;\n        this.onOpen();\n        // In case open handler closes socket\n        if (\"closed\" === this.readyState)\n            return;\n        this.resetPingTimeout();\n    }\n    /**\n     * Sets and resets ping timeout timer based on server pings.\n     *\n     * @private\n     */\n    resetPingTimeout() {\n        this.clearTimeoutFn(this.pingTimeoutTimer);\n        this.pingTimeoutTimer = this.setTimeoutFn(() => {\n            this.onClose(\"ping timeout\");\n        }, this.pingInterval + this.pingTimeout);\n        if (this.opts.autoUnref) {\n            this.pingTimeoutTimer.unref();\n        }\n    }\n    /**\n     * Called on `drain` event\n     *\n     * @private\n     */\n    onDrain() {\n        this.writeBuffer.splice(0, this.prevBufferLen);\n        // setting prevBufferLen = 0 is very important\n        // for example, when upgrading, upgrade packet is sent over,\n        // and a nonzero prevBufferLen could cause problems on `drain`\n        this.prevBufferLen = 0;\n        if (0 === this.writeBuffer.length) {\n            this.emitReserved(\"drain\");\n        }\n        else {\n            this.flush();\n        }\n    }\n    /**\n     * Flush write buffers.\n     *\n     * @private\n     */\n    flush() {\n        if (\"closed\" !== this.readyState &&\n            this.transport.writable &&\n            !this.upgrading &&\n            this.writeBuffer.length) {\n            const packets = this.getWritablePackets();\n            this.transport.send(packets);\n            // keep track of current length of writeBuffer\n            // splice writeBuffer and callbackBuffer on `drain`\n            this.prevBufferLen = packets.length;\n            this.emitReserved(\"flush\");\n        }\n    }\n    /**\n     * Ensure the encoded size of the writeBuffer is below the maxPayload value sent by the server (only for HTTP\n     * long-polling)\n     *\n     * @private\n     */\n    getWritablePackets() {\n        const shouldCheckPayloadSize = this.maxPayload &&\n            this.transport.name === \"polling\" &&\n            this.writeBuffer.length > 1;\n        if (!shouldCheckPayloadSize) {\n            return this.writeBuffer;\n        }\n        let payloadSize = 1; // first packet type\n        for (let i = 0; i < this.writeBuffer.length; i++) {\n            const data = this.writeBuffer[i].data;\n            if (data) {\n                payloadSize += byteLength(data);\n            }\n            if (i > 0 && payloadSize > this.maxPayload) {\n                return this.writeBuffer.slice(0, i);\n            }\n            payloadSize += 2; // separator + packet type\n        }\n        return this.writeBuffer;\n    }\n    /**\n     * Sends a message.\n     *\n     * @param {String} msg - message.\n     * @param {Object} options.\n     * @param {Function} callback function.\n     * @return {Socket} for chaining.\n     */\n    write(msg, options, fn) {\n        this.sendPacket(\"message\", msg, options, fn);\n        return this;\n    }\n    send(msg, options, fn) {\n        this.sendPacket(\"message\", msg, options, fn);\n        return this;\n    }\n    /**\n     * Sends a packet.\n     *\n     * @param {String} type: packet type.\n     * @param {String} data.\n     * @param {Object} options.\n     * @param {Function} fn - callback function.\n     * @private\n     */\n    sendPacket(type, data, options, fn) {\n        if (\"function\" === typeof data) {\n            fn = data;\n            data = undefined;\n        }\n        if (\"function\" === typeof options) {\n            fn = options;\n            options = null;\n        }\n        if (\"closing\" === this.readyState || \"closed\" === this.readyState) {\n            return;\n        }\n        options = options || {};\n        options.compress = false !== options.compress;\n        const packet = {\n            type: type,\n            data: data,\n            options: options,\n        };\n        this.emitReserved(\"packetCreate\", packet);\n        this.writeBuffer.push(packet);\n        if (fn)\n            this.once(\"flush\", fn);\n        this.flush();\n    }\n    /**\n     * Closes the connection.\n     */\n    close() {\n        const close = () => {\n            this.onClose(\"forced close\");\n            this.transport.close();\n        };\n        const cleanupAndClose = () => {\n            this.off(\"upgrade\", cleanupAndClose);\n            this.off(\"upgradeError\", cleanupAndClose);\n            close();\n        };\n        const waitForUpgrade = () => {\n            // wait for upgrade to finish since we can't send packets while pausing a transport\n            this.once(\"upgrade\", cleanupAndClose);\n            this.once(\"upgradeError\", cleanupAndClose);\n        };\n        if (\"opening\" === this.readyState || \"open\" === this.readyState) {\n            this.readyState = \"closing\";\n            if (this.writeBuffer.length) {\n                this.once(\"drain\", () => {\n                    if (this.upgrading) {\n                        waitForUpgrade();\n                    }\n                    else {\n                        close();\n                    }\n                });\n            }\n            else if (this.upgrading) {\n                waitForUpgrade();\n            }\n            else {\n                close();\n            }\n        }\n        return this;\n    }\n    /**\n     * Called upon transport error\n     *\n     * @private\n     */\n    onError(err) {\n        Socket.priorWebsocketSuccess = false;\n        this.emitReserved(\"error\", err);\n        this.onClose(\"transport error\", err);\n    }\n    /**\n     * Called upon transport close.\n     *\n     * @private\n     */\n    onClose(reason, description) {\n        if (\"opening\" === this.readyState ||\n            \"open\" === this.readyState ||\n            \"closing\" === this.readyState) {\n            // clear timers\n            this.clearTimeoutFn(this.pingTimeoutTimer);\n            // stop event from firing again for transport\n            this.transport.removeAllListeners(\"close\");\n            // ensure transport won't stay open\n            this.transport.close();\n            // ignore further transport communication\n            this.transport.removeAllListeners();\n            if (typeof removeEventListener === \"function\") {\n                removeEventListener(\"beforeunload\", this.beforeunloadEventListener, false);\n                removeEventListener(\"offline\", this.offlineEventListener, false);\n            }\n            // set ready state\n            this.readyState = \"closed\";\n            // clear session id\n            this.id = null;\n            // emit close event\n            this.emitReserved(\"close\", reason, description);\n            // clean buffers after, so users can still\n            // grab the buffers on `close` event\n            this.writeBuffer = [];\n            this.prevBufferLen = 0;\n        }\n    }\n    /**\n     * Filters upgrades, returning only those matching client transports.\n     *\n     * @param {Array} upgrades - server upgrades\n     * @private\n     */\n    filterUpgrades(upgrades) {\n        const filteredUpgrades = [];\n        let i = 0;\n        const j = upgrades.length;\n        for (; i < j; i++) {\n            if (~this.transports.indexOf(upgrades[i]))\n                filteredUpgrades.push(upgrades[i]);\n        }\n        return filteredUpgrades;\n    }\n}\nSocket.protocol = protocol;\n","import { Socket } from \"./socket.js\";\nexport { Socket };\nexport const protocol = Socket.protocol;\nexport { Transport } from \"./transport.js\";\nexport { transports } from \"./transports/index.js\";\nexport { installTimerFunctions } from \"./util.js\";\nexport { parse } from \"./contrib/parseuri.js\";\nexport { nextTick } from \"./transports/websocket-constructor.js\";\n","const withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\nconst isView = (obj) => {\n    return typeof ArrayBuffer.isView === \"function\"\n        ? ArrayBuffer.isView(obj)\n        : obj.buffer instanceof ArrayBuffer;\n};\nconst toString = Object.prototype.toString;\nconst withNativeBlob = typeof Blob === \"function\" ||\n    (typeof Blob !== \"undefined\" &&\n        toString.call(Blob) === \"[object BlobConstructor]\");\nconst withNativeFile = typeof File === \"function\" ||\n    (typeof File !== \"undefined\" &&\n        toString.call(File) === \"[object FileConstructor]\");\n/**\n * Returns true if obj is a Buffer, an ArrayBuffer, a Blob or a File.\n *\n * @private\n */\nexport function isBinary(obj) {\n    return ((withNativeArrayBuffer && (obj instanceof ArrayBuffer || isView(obj))) ||\n        (withNativeBlob && obj instanceof Blob) ||\n        (withNativeFile && obj instanceof File));\n}\nexport function hasBinary(obj, toJSON) {\n    if (!obj || typeof obj !== \"object\") {\n        return false;\n    }\n    if (Array.isArray(obj)) {\n        for (let i = 0, l = obj.length; i < l; i++) {\n            if (hasBinary(obj[i])) {\n                return true;\n            }\n        }\n        return false;\n    }\n    if (isBinary(obj)) {\n        return true;\n    }\n    if (obj.toJSON &&\n        typeof obj.toJSON === \"function\" &&\n        arguments.length === 1) {\n        return hasBinary(obj.toJSON(), true);\n    }\n    for (const key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key) && hasBinary(obj[key])) {\n            return true;\n        }\n    }\n    return false;\n}\n","import { isBinary } from \"./is-binary.js\";\n/**\n * Replaces every Buffer | ArrayBuffer | Blob | File in packet with a numbered placeholder.\n *\n * @param {Object} packet - socket.io event packet\n * @return {Object} with deconstructed packet and list of buffers\n * @public\n */\nexport function deconstructPacket(packet) {\n    const buffers = [];\n    const packetData = packet.data;\n    const pack = packet;\n    pack.data = _deconstructPacket(packetData, buffers);\n    pack.attachments = buffers.length; // number of binary 'attachments'\n    return { packet: pack, buffers: buffers };\n}\nfunction _deconstructPacket(data, buffers) {\n    if (!data)\n        return data;\n    if (isBinary(data)) {\n        const placeholder = { _placeholder: true, num: buffers.length };\n        buffers.push(data);\n        return placeholder;\n    }\n    else if (Array.isArray(data)) {\n        const newData = new Array(data.length);\n        for (let i = 0; i < data.length; i++) {\n            newData[i] = _deconstructPacket(data[i], buffers);\n        }\n        return newData;\n    }\n    else if (typeof data === \"object\" && !(data instanceof Date)) {\n        const newData = {};\n        for (const key in data) {\n            if (Object.prototype.hasOwnProperty.call(data, key)) {\n                newData[key] = _deconstructPacket(data[key], buffers);\n            }\n        }\n        return newData;\n    }\n    return data;\n}\n/**\n * Reconstructs a binary packet from its placeholder packet and buffers\n *\n * @param {Object} packet - event packet with placeholders\n * @param {Array} buffers - binary buffers to put in placeholder positions\n * @return {Object} reconstructed packet\n * @public\n */\nexport function reconstructPacket(packet, buffers) {\n    packet.data = _reconstructPacket(packet.data, buffers);\n    delete packet.attachments; // no longer useful\n    return packet;\n}\nfunction _reconstructPacket(data, buffers) {\n    if (!data)\n        return data;\n    if (data && data._placeholder === true) {\n        const isIndexValid = typeof data.num === \"number\" &&\n            data.num >= 0 &&\n            data.num < buffers.length;\n        if (isIndexValid) {\n            return buffers[data.num]; // appropriate buffer (should be natural order anyway)\n        }\n        else {\n            throw new Error(\"illegal attachments\");\n        }\n    }\n    else if (Array.isArray(data)) {\n        for (let i = 0; i < data.length; i++) {\n            data[i] = _reconstructPacket(data[i], buffers);\n        }\n    }\n    else if (typeof data === \"object\") {\n        for (const key in data) {\n            if (Object.prototype.hasOwnProperty.call(data, key)) {\n                data[key] = _reconstructPacket(data[key], buffers);\n            }\n        }\n    }\n    return data;\n}\n","import { Emitter } from \"@socket.io/component-emitter\";\nimport { deconstructPacket, reconstructPacket } from \"./binary.js\";\nimport { isBinary, hasBinary } from \"./is-binary.js\";\n/**\n * Protocol version.\n *\n * @public\n */\nexport const protocol = 5;\nexport var PacketType;\n(function (PacketType) {\n    PacketType[PacketType[\"CONNECT\"] = 0] = \"CONNECT\";\n    PacketType[PacketType[\"DISCONNECT\"] = 1] = \"DISCONNECT\";\n    PacketType[PacketType[\"EVENT\"] = 2] = \"EVENT\";\n    PacketType[PacketType[\"ACK\"] = 3] = \"ACK\";\n    PacketType[PacketType[\"CONNECT_ERROR\"] = 4] = \"CONNECT_ERROR\";\n    PacketType[PacketType[\"BINARY_EVENT\"] = 5] = \"BINARY_EVENT\";\n    PacketType[PacketType[\"BINARY_ACK\"] = 6] = \"BINARY_ACK\";\n})(PacketType || (PacketType = {}));\n/**\n * A socket.io Encoder instance\n */\nexport class Encoder {\n    /**\n     * Encoder constructor\n     *\n     * @param {function} replacer - custom replacer to pass down to JSON.parse\n     */\n    constructor(replacer) {\n        this.replacer = replacer;\n    }\n    /**\n     * Encode a packet as a single string if non-binary, or as a\n     * buffer sequence, depending on packet type.\n     *\n     * @param {Object} obj - packet object\n     */\n    encode(obj) {\n        if (obj.type === PacketType.EVENT || obj.type === PacketType.ACK) {\n            if (hasBinary(obj)) {\n                return this.encodeAsBinary({\n                    type: obj.type === PacketType.EVENT\n                        ? PacketType.BINARY_EVENT\n                        : PacketType.BINARY_ACK,\n                    nsp: obj.nsp,\n                    data: obj.data,\n                    id: obj.id,\n                });\n            }\n        }\n        return [this.encodeAsString(obj)];\n    }\n    /**\n     * Encode packet as string.\n     */\n    encodeAsString(obj) {\n        // first is type\n        let str = \"\" + obj.type;\n        // attachments if we have them\n        if (obj.type === PacketType.BINARY_EVENT ||\n            obj.type === PacketType.BINARY_ACK) {\n            str += obj.attachments + \"-\";\n        }\n        // if we have a namespace other than `/`\n        // we append it followed by a comma `,`\n        if (obj.nsp && \"/\" !== obj.nsp) {\n            str += obj.nsp + \",\";\n        }\n        // immediately followed by the id\n        if (null != obj.id) {\n            str += obj.id;\n        }\n        // json data\n        if (null != obj.data) {\n            str += JSON.stringify(obj.data, this.replacer);\n        }\n        return str;\n    }\n    /**\n     * Encode packet as 'buffer sequence' by removing blobs, and\n     * deconstructing packet into object with placeholders and\n     * a list of buffers.\n     */\n    encodeAsBinary(obj) {\n        const deconstruction = deconstructPacket(obj);\n        const pack = this.encodeAsString(deconstruction.packet);\n        const buffers = deconstruction.buffers;\n        buffers.unshift(pack); // add packet info to beginning of data list\n        return buffers; // write all the buffers\n    }\n}\n/**\n * A socket.io Decoder instance\n *\n * @return {Object} decoder\n */\nexport class Decoder extends Emitter {\n    /**\n     * Decoder constructor\n     *\n     * @param {function} reviver - custom reviver to pass down to JSON.stringify\n     */\n    constructor(reviver) {\n        super();\n        this.reviver = reviver;\n    }\n    /**\n     * Decodes an encoded packet string into packet JSON.\n     *\n     * @param {String} obj - encoded packet\n     */\n    add(obj) {\n        let packet;\n        if (typeof obj === \"string\") {\n            if (this.reconstructor) {\n                throw new Error(\"got plaintext data when reconstructing a packet\");\n            }\n            packet = this.decodeString(obj);\n            const isBinaryEvent = packet.type === PacketType.BINARY_EVENT;\n            if (isBinaryEvent || packet.type === PacketType.BINARY_ACK) {\n                packet.type = isBinaryEvent ? PacketType.EVENT : PacketType.ACK;\n                // binary packet's json\n                this.reconstructor = new BinaryReconstructor(packet);\n                // no attachments, labeled binary but no binary data to follow\n                if (packet.attachments === 0) {\n                    super.emitReserved(\"decoded\", packet);\n                }\n            }\n            else {\n                // non-binary full packet\n                super.emitReserved(\"decoded\", packet);\n            }\n        }\n        else if (isBinary(obj) || obj.base64) {\n            // raw binary data\n            if (!this.reconstructor) {\n                throw new Error(\"got binary data when not reconstructing a packet\");\n            }\n            else {\n                packet = this.reconstructor.takeBinaryData(obj);\n                if (packet) {\n                    // received final buffer\n                    this.reconstructor = null;\n                    super.emitReserved(\"decoded\", packet);\n                }\n            }\n        }\n        else {\n            throw new Error(\"Unknown type: \" + obj);\n        }\n    }\n    /**\n     * Decode a packet String (JSON data)\n     *\n     * @param {String} str\n     * @return {Object} packet\n     */\n    decodeString(str) {\n        let i = 0;\n        // look up type\n        const p = {\n            type: Number(str.charAt(0)),\n        };\n        if (PacketType[p.type] === undefined) {\n            throw new Error(\"unknown packet type \" + p.type);\n        }\n        // look up attachments if type binary\n        if (p.type === PacketType.BINARY_EVENT ||\n            p.type === PacketType.BINARY_ACK) {\n            const start = i + 1;\n            while (str.charAt(++i) !== \"-\" && i != str.length) { }\n            const buf = str.substring(start, i);\n            if (buf != Number(buf) || str.charAt(i) !== \"-\") {\n                throw new Error(\"Illegal attachments\");\n            }\n            p.attachments = Number(buf);\n        }\n        // look up namespace (if any)\n        if (\"/\" === str.charAt(i + 1)) {\n            const start = i + 1;\n            while (++i) {\n                const c = str.charAt(i);\n                if (\",\" === c)\n                    break;\n                if (i === str.length)\n                    break;\n            }\n            p.nsp = str.substring(start, i);\n        }\n        else {\n            p.nsp = \"/\";\n        }\n        // look up id\n        const next = str.charAt(i + 1);\n        if (\"\" !== next && Number(next) == next) {\n            const start = i + 1;\n            while (++i) {\n                const c = str.charAt(i);\n                if (null == c || Number(c) != c) {\n                    --i;\n                    break;\n                }\n                if (i === str.length)\n                    break;\n            }\n            p.id = Number(str.substring(start, i + 1));\n        }\n        // look up json data\n        if (str.charAt(++i)) {\n            const payload = this.tryParse(str.substr(i));\n            if (Decoder.isPayloadValid(p.type, payload)) {\n                p.data = payload;\n            }\n            else {\n                throw new Error(\"invalid payload\");\n            }\n        }\n        return p;\n    }\n    tryParse(str) {\n        try {\n            return JSON.parse(str, this.reviver);\n        }\n        catch (e) {\n            return false;\n        }\n    }\n    static isPayloadValid(type, payload) {\n        switch (type) {\n            case PacketType.CONNECT:\n                return typeof payload === \"object\";\n            case PacketType.DISCONNECT:\n                return payload === undefined;\n            case PacketType.CONNECT_ERROR:\n                return typeof payload === \"string\" || typeof payload === \"object\";\n            case PacketType.EVENT:\n            case PacketType.BINARY_EVENT:\n                return Array.isArray(payload) && payload.length > 0;\n            case PacketType.ACK:\n            case PacketType.BINARY_ACK:\n                return Array.isArray(payload);\n        }\n    }\n    /**\n     * Deallocates a parser's resources\n     */\n    destroy() {\n        if (this.reconstructor) {\n            this.reconstructor.finishedReconstruction();\n            this.reconstructor = null;\n        }\n    }\n}\n/**\n * A manager of a binary event's 'buffer sequence'. Should\n * be constructed whenever a packet of type BINARY_EVENT is\n * decoded.\n *\n * @param {Object} packet\n * @return {BinaryReconstructor} initialized reconstructor\n */\nclass BinaryReconstructor {\n    constructor(packet) {\n        this.packet = packet;\n        this.buffers = [];\n        this.reconPack = packet;\n    }\n    /**\n     * Method to be called when binary data received from connection\n     * after a BINARY_EVENT packet.\n     *\n     * @param {Buffer | ArrayBuffer} binData - the raw binary data received\n     * @return {null | Object} returns null if more binary data is expected or\n     *   a reconstructed packet object if all buffers have been received.\n     */\n    takeBinaryData(binData) {\n        this.buffers.push(binData);\n        if (this.buffers.length === this.reconPack.attachments) {\n            // done with buffer list\n            const packet = reconstructPacket(this.reconPack, this.buffers);\n            this.finishedReconstruction();\n            return packet;\n        }\n        return null;\n    }\n    /**\n     * Cleans up binary packet reconstruction variables.\n     */\n    finishedReconstruction() {\n        this.reconPack = null;\n        this.buffers = [];\n    }\n}\n","export function on(obj, ev, fn) {\n    obj.on(ev, fn);\n    return function subDestroy() {\n        obj.off(ev, fn);\n    };\n}\n","import { PacketType } from \"socket.io-parser\";\nimport { on } from \"./on.js\";\nimport { Emitter, } from \"@socket.io/component-emitter\";\n/**\n * Internal events.\n * These events can't be emitted by the user.\n */\nconst RESERVED_EVENTS = Object.freeze({\n    connect: 1,\n    connect_error: 1,\n    disconnect: 1,\n    disconnecting: 1,\n    // EventEmitter reserved events: https://nodejs.org/api/events.html#events_event_newlistener\n    newListener: 1,\n    removeListener: 1,\n});\n/**\n * A Socket is the fundamental class for interacting with the server.\n *\n * A Socket belongs to a certain Namespace (by default /) and uses an underlying {@link Manager} to communicate.\n *\n * @example\n * const socket = io();\n *\n * socket.on(\"connect\", () => {\n *   console.log(\"connected\");\n * });\n *\n * // send an event to the server\n * socket.emit(\"foo\", \"bar\");\n *\n * socket.on(\"foobar\", () => {\n *   // an event was received from the server\n * });\n *\n * // upon disconnection\n * socket.on(\"disconnect\", (reason) => {\n *   console.log(`disconnected due to ${reason}`);\n * });\n */\nexport class Socket extends Emitter {\n    /**\n     * `Socket` constructor.\n     */\n    constructor(io, nsp, opts) {\n        super();\n        /**\n         * Whether the socket is currently connected to the server.\n         *\n         * @example\n         * const socket = io();\n         *\n         * socket.on(\"connect\", () => {\n         *   console.log(socket.connected); // true\n         * });\n         *\n         * socket.on(\"disconnect\", () => {\n         *   console.log(socket.connected); // false\n         * });\n         */\n        this.connected = false;\n        /**\n         * Whether the connection state was recovered after a temporary disconnection. In that case, any missed packets will\n         * be transmitted by the server.\n         */\n        this.recovered = false;\n        /**\n         * Buffer for packets received before the CONNECT packet\n         */\n        this.receiveBuffer = [];\n        /**\n         * Buffer for packets that will be sent once the socket is connected\n         */\n        this.sendBuffer = [];\n        /**\n         * The queue of packets to be sent with retry in case of failure.\n         *\n         * Packets are sent one by one, each waiting for the server acknowledgement, in order to guarantee the delivery order.\n         * @private\n         */\n        this._queue = [];\n        /**\n         * A sequence to generate the ID of the {@link QueuedPacket}.\n         * @private\n         */\n        this._queueSeq = 0;\n        this.ids = 0;\n        this.acks = {};\n        this.flags = {};\n        this.io = io;\n        this.nsp = nsp;\n        if (opts && opts.auth) {\n            this.auth = opts.auth;\n        }\n        this._opts = Object.assign({}, opts);\n        if (this.io._autoConnect)\n            this.open();\n    }\n    /**\n     * Whether the socket is currently disconnected\n     *\n     * @example\n     * const socket = io();\n     *\n     * socket.on(\"connect\", () => {\n     *   console.log(socket.disconnected); // false\n     * });\n     *\n     * socket.on(\"disconnect\", () => {\n     *   console.log(socket.disconnected); // true\n     * });\n     */\n    get disconnected() {\n        return !this.connected;\n    }\n    /**\n     * Subscribe to open, close and packet events\n     *\n     * @private\n     */\n    subEvents() {\n        if (this.subs)\n            return;\n        const io = this.io;\n        this.subs = [\n            on(io, \"open\", this.onopen.bind(this)),\n            on(io, \"packet\", this.onpacket.bind(this)),\n            on(io, \"error\", this.onerror.bind(this)),\n            on(io, \"close\", this.onclose.bind(this)),\n        ];\n    }\n    /**\n     * Whether the Socket will try to reconnect when its Manager connects or reconnects.\n     *\n     * @example\n     * const socket = io();\n     *\n     * console.log(socket.active); // true\n     *\n     * socket.on(\"disconnect\", (reason) => {\n     *   if (reason === \"io server disconnect\") {\n     *     // the disconnection was initiated by the server, you need to manually reconnect\n     *     console.log(socket.active); // false\n     *   }\n     *   // else the socket will automatically try to reconnect\n     *   console.log(socket.active); // true\n     * });\n     */\n    get active() {\n        return !!this.subs;\n    }\n    /**\n     * \"Opens\" the socket.\n     *\n     * @example\n     * const socket = io({\n     *   autoConnect: false\n     * });\n     *\n     * socket.connect();\n     */\n    connect() {\n        if (this.connected)\n            return this;\n        this.subEvents();\n        if (!this.io[\"_reconnecting\"])\n            this.io.open(); // ensure open\n        if (\"open\" === this.io._readyState)\n            this.onopen();\n        return this;\n    }\n    /**\n     * Alias for {@link connect()}.\n     */\n    open() {\n        return this.connect();\n    }\n    /**\n     * Sends a `message` event.\n     *\n     * This method mimics the WebSocket.send() method.\n     *\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/WebSocket/send\n     *\n     * @example\n     * socket.send(\"hello\");\n     *\n     * // this is equivalent to\n     * socket.emit(\"message\", \"hello\");\n     *\n     * @return self\n     */\n    send(...args) {\n        args.unshift(\"message\");\n        this.emit.apply(this, args);\n        return this;\n    }\n    /**\n     * Override `emit`.\n     * If the event is in `events`, it's emitted normally.\n     *\n     * @example\n     * socket.emit(\"hello\", \"world\");\n     *\n     * // all serializable datastructures are supported (no need to call JSON.stringify)\n     * socket.emit(\"hello\", 1, \"2\", { 3: [\"4\"], 5: Uint8Array.from([6]) });\n     *\n     * // with an acknowledgement from the server\n     * socket.emit(\"hello\", \"world\", (val) => {\n     *   // ...\n     * });\n     *\n     * @return self\n     */\n    emit(ev, ...args) {\n        if (RESERVED_EVENTS.hasOwnProperty(ev)) {\n            throw new Error('\"' + ev.toString() + '\" is a reserved event name');\n        }\n        args.unshift(ev);\n        if (this._opts.retries && !this.flags.fromQueue && !this.flags.volatile) {\n            this._addToQueue(args);\n            return this;\n        }\n        const packet = {\n            type: PacketType.EVENT,\n            data: args,\n        };\n        packet.options = {};\n        packet.options.compress = this.flags.compress !== false;\n        // event ack callback\n        if (\"function\" === typeof args[args.length - 1]) {\n            const id = this.ids++;\n            const ack = args.pop();\n            this._registerAckCallback(id, ack);\n            packet.id = id;\n        }\n        const isTransportWritable = this.io.engine &&\n            this.io.engine.transport &&\n            this.io.engine.transport.writable;\n        const discardPacket = this.flags.volatile && (!isTransportWritable || !this.connected);\n        if (discardPacket) {\n        }\n        else if (this.connected) {\n            this.notifyOutgoingListeners(packet);\n            this.packet(packet);\n        }\n        else {\n            this.sendBuffer.push(packet);\n        }\n        this.flags = {};\n        return this;\n    }\n    /**\n     * @private\n     */\n    _registerAckCallback(id, ack) {\n        var _a;\n        const timeout = (_a = this.flags.timeout) !== null && _a !== void 0 ? _a : this._opts.ackTimeout;\n        if (timeout === undefined) {\n            this.acks[id] = ack;\n            return;\n        }\n        // @ts-ignore\n        const timer = this.io.setTimeoutFn(() => {\n            delete this.acks[id];\n            for (let i = 0; i < this.sendBuffer.length; i++) {\n                if (this.sendBuffer[i].id === id) {\n                    this.sendBuffer.splice(i, 1);\n                }\n            }\n            ack.call(this, new Error(\"operation has timed out\"));\n        }, timeout);\n        this.acks[id] = (...args) => {\n            // @ts-ignore\n            this.io.clearTimeoutFn(timer);\n            ack.apply(this, [null, ...args]);\n        };\n    }\n    /**\n     * Emits an event and waits for an acknowledgement\n     *\n     * @example\n     * // without timeout\n     * const response = await socket.emitWithAck(\"hello\", \"world\");\n     *\n     * // with a specific timeout\n     * try {\n     *   const response = await socket.timeout(1000).emitWithAck(\"hello\", \"world\");\n     * } catch (err) {\n     *   // the server did not acknowledge the event in the given delay\n     * }\n     *\n     * @return a Promise that will be fulfilled when the server acknowledges the event\n     */\n    emitWithAck(ev, ...args) {\n        // the timeout flag is optional\n        const withErr = this.flags.timeout !== undefined || this._opts.ackTimeout !== undefined;\n        return new Promise((resolve, reject) => {\n            args.push((arg1, arg2) => {\n                if (withErr) {\n                    return arg1 ? reject(arg1) : resolve(arg2);\n                }\n                else {\n                    return resolve(arg1);\n                }\n            });\n            this.emit(ev, ...args);\n        });\n    }\n    /**\n     * Add the packet to the queue.\n     * @param args\n     * @private\n     */\n    _addToQueue(args) {\n        let ack;\n        if (typeof args[args.length - 1] === \"function\") {\n            ack = args.pop();\n        }\n        const packet = {\n            id: this._queueSeq++,\n            tryCount: 0,\n            pending: false,\n            args,\n            flags: Object.assign({ fromQueue: true }, this.flags),\n        };\n        args.push((err, ...responseArgs) => {\n            if (packet !== this._queue[0]) {\n                // the packet has already been acknowledged\n                return;\n            }\n            const hasError = err !== null;\n            if (hasError) {\n                if (packet.tryCount > this._opts.retries) {\n                    this._queue.shift();\n                    if (ack) {\n                        ack(err);\n                    }\n                }\n            }\n            else {\n                this._queue.shift();\n                if (ack) {\n                    ack(null, ...responseArgs);\n                }\n            }\n            packet.pending = false;\n            return this._drainQueue();\n        });\n        this._queue.push(packet);\n        this._drainQueue();\n    }\n    /**\n     * Send the first packet of the queue, and wait for an acknowledgement from the server.\n     * @param force - whether to resend a packet that has not been acknowledged yet\n     *\n     * @private\n     */\n    _drainQueue(force = false) {\n        if (!this.connected || this._queue.length === 0) {\n            return;\n        }\n        const packet = this._queue[0];\n        if (packet.pending && !force) {\n            return;\n        }\n        packet.pending = true;\n        packet.tryCount++;\n        this.flags = packet.flags;\n        this.emit.apply(this, packet.args);\n    }\n    /**\n     * Sends a packet.\n     *\n     * @param packet\n     * @private\n     */\n    packet(packet) {\n        packet.nsp = this.nsp;\n        this.io._packet(packet);\n    }\n    /**\n     * Called upon engine `open`.\n     *\n     * @private\n     */\n    onopen() {\n        if (typeof this.auth == \"function\") {\n            this.auth((data) => {\n                this._sendConnectPacket(data);\n            });\n        }\n        else {\n            this._sendConnectPacket(this.auth);\n        }\n    }\n    /**\n     * Sends a CONNECT packet to initiate the Socket.IO session.\n     *\n     * @param data\n     * @private\n     */\n    _sendConnectPacket(data) {\n        this.packet({\n            type: PacketType.CONNECT,\n            data: this._pid\n                ? Object.assign({ pid: this._pid, offset: this._lastOffset }, data)\n                : data,\n        });\n    }\n    /**\n     * Called upon engine or manager `error`.\n     *\n     * @param err\n     * @private\n     */\n    onerror(err) {\n        if (!this.connected) {\n            this.emitReserved(\"connect_error\", err);\n        }\n    }\n    /**\n     * Called upon engine `close`.\n     *\n     * @param reason\n     * @param description\n     * @private\n     */\n    onclose(reason, description) {\n        this.connected = false;\n        delete this.id;\n        this.emitReserved(\"disconnect\", reason, description);\n    }\n    /**\n     * Called with socket packet.\n     *\n     * @param packet\n     * @private\n     */\n    onpacket(packet) {\n        const sameNamespace = packet.nsp === this.nsp;\n        if (!sameNamespace)\n            return;\n        switch (packet.type) {\n            case PacketType.CONNECT:\n                if (packet.data && packet.data.sid) {\n                    this.onconnect(packet.data.sid, packet.data.pid);\n                }\n                else {\n                    this.emitReserved(\"connect_error\", new Error(\"It seems you are trying to reach a Socket.IO server in v2.x with a v3.x client, but they are not compatible (more information here: https://socket.io/docs/v3/migrating-from-2-x-to-3-0/)\"));\n                }\n                break;\n            case PacketType.EVENT:\n            case PacketType.BINARY_EVENT:\n                this.onevent(packet);\n                break;\n            case PacketType.ACK:\n            case PacketType.BINARY_ACK:\n                this.onack(packet);\n                break;\n            case PacketType.DISCONNECT:\n                this.ondisconnect();\n                break;\n            case PacketType.CONNECT_ERROR:\n                this.destroy();\n                const err = new Error(packet.data.message);\n                // @ts-ignore\n                err.data = packet.data.data;\n                this.emitReserved(\"connect_error\", err);\n                break;\n        }\n    }\n    /**\n     * Called upon a server event.\n     *\n     * @param packet\n     * @private\n     */\n    onevent(packet) {\n        const args = packet.data || [];\n        if (null != packet.id) {\n            args.push(this.ack(packet.id));\n        }\n        if (this.connected) {\n            this.emitEvent(args);\n        }\n        else {\n            this.receiveBuffer.push(Object.freeze(args));\n        }\n    }\n    emitEvent(args) {\n        if (this._anyListeners && this._anyListeners.length) {\n            const listeners = this._anyListeners.slice();\n            for (const listener of listeners) {\n                listener.apply(this, args);\n            }\n        }\n        super.emit.apply(this, args);\n        if (this._pid && args.length && typeof args[args.length - 1] === \"string\") {\n            this._lastOffset = args[args.length - 1];\n        }\n    }\n    /**\n     * Produces an ack callback to emit with an event.\n     *\n     * @private\n     */\n    ack(id) {\n        const self = this;\n        let sent = false;\n        return function (...args) {\n            // prevent double callbacks\n            if (sent)\n                return;\n            sent = true;\n            self.packet({\n                type: PacketType.ACK,\n                id: id,\n                data: args,\n            });\n        };\n    }\n    /**\n     * Called upon a server acknowlegement.\n     *\n     * @param packet\n     * @private\n     */\n    onack(packet) {\n        const ack = this.acks[packet.id];\n        if (\"function\" === typeof ack) {\n            ack.apply(this, packet.data);\n            delete this.acks[packet.id];\n        }\n        else {\n        }\n    }\n    /**\n     * Called upon server connect.\n     *\n     * @private\n     */\n    onconnect(id, pid) {\n        this.id = id;\n        this.recovered = pid && this._pid === pid;\n        this._pid = pid; // defined only if connection state recovery is enabled\n        this.connected = true;\n        this.emitBuffered();\n        this.emitReserved(\"connect\");\n        this._drainQueue(true);\n    }\n    /**\n     * Emit buffered events (received and emitted).\n     *\n     * @private\n     */\n    emitBuffered() {\n        this.receiveBuffer.forEach((args) => this.emitEvent(args));\n        this.receiveBuffer = [];\n        this.sendBuffer.forEach((packet) => {\n            this.notifyOutgoingListeners(packet);\n            this.packet(packet);\n        });\n        this.sendBuffer = [];\n    }\n    /**\n     * Called upon server disconnect.\n     *\n     * @private\n     */\n    ondisconnect() {\n        this.destroy();\n        this.onclose(\"io server disconnect\");\n    }\n    /**\n     * Called upon forced client/server side disconnections,\n     * this method ensures the manager stops tracking us and\n     * that reconnections don't get triggered for this.\n     *\n     * @private\n     */\n    destroy() {\n        if (this.subs) {\n            // clean subscriptions to avoid reconnections\n            this.subs.forEach((subDestroy) => subDestroy());\n            this.subs = undefined;\n        }\n        this.io[\"_destroy\"](this);\n    }\n    /**\n     * Disconnects the socket manually. In that case, the socket will not try to reconnect.\n     *\n     * If this is the last active Socket instance of the {@link Manager}, the low-level connection will be closed.\n     *\n     * @example\n     * const socket = io();\n     *\n     * socket.on(\"disconnect\", (reason) => {\n     *   // console.log(reason); prints \"io client disconnect\"\n     * });\n     *\n     * socket.disconnect();\n     *\n     * @return self\n     */\n    disconnect() {\n        if (this.connected) {\n            this.packet({ type: PacketType.DISCONNECT });\n        }\n        // remove socket from pool\n        this.destroy();\n        if (this.connected) {\n            // fire events\n            this.onclose(\"io client disconnect\");\n        }\n        return this;\n    }\n    /**\n     * Alias for {@link disconnect()}.\n     *\n     * @return self\n     */\n    close() {\n        return this.disconnect();\n    }\n    /**\n     * Sets the compress flag.\n     *\n     * @example\n     * socket.compress(false).emit(\"hello\");\n     *\n     * @param compress - if `true`, compresses the sending data\n     * @return self\n     */\n    compress(compress) {\n        this.flags.compress = compress;\n        return this;\n    }\n    /**\n     * Sets a modifier for a subsequent event emission that the event message will be dropped when this socket is not\n     * ready to send messages.\n     *\n     * @example\n     * socket.volatile.emit(\"hello\"); // the server may or may not receive it\n     *\n     * @returns self\n     */\n    get volatile() {\n        this.flags.volatile = true;\n        return this;\n    }\n    /**\n     * Sets a modifier for a subsequent event emission that the callback will be called with an error when the\n     * given number of milliseconds have elapsed without an acknowledgement from the server:\n     *\n     * @example\n     * socket.timeout(5000).emit(\"my-event\", (err) => {\n     *   if (err) {\n     *     // the server did not acknowledge the event in the given delay\n     *   }\n     * });\n     *\n     * @returns self\n     */\n    timeout(timeout) {\n        this.flags.timeout = timeout;\n        return this;\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback.\n     *\n     * @example\n     * socket.onAny((event, ...args) => {\n     *   console.log(`got ${event}`);\n     * });\n     *\n     * @param listener\n     */\n    onAny(listener) {\n        this._anyListeners = this._anyListeners || [];\n        this._anyListeners.push(listener);\n        return this;\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback. The listener is added to the beginning of the listeners array.\n     *\n     * @example\n     * socket.prependAny((event, ...args) => {\n     *   console.log(`got event ${event}`);\n     * });\n     *\n     * @param listener\n     */\n    prependAny(listener) {\n        this._anyListeners = this._anyListeners || [];\n        this._anyListeners.unshift(listener);\n        return this;\n    }\n    /**\n     * Removes the listener that will be fired when any event is emitted.\n     *\n     * @example\n     * const catchAllListener = (event, ...args) => {\n     *   console.log(`got event ${event}`);\n     * }\n     *\n     * socket.onAny(catchAllListener);\n     *\n     * // remove a specific listener\n     * socket.offAny(catchAllListener);\n     *\n     * // or remove all listeners\n     * socket.offAny();\n     *\n     * @param listener\n     */\n    offAny(listener) {\n        if (!this._anyListeners) {\n            return this;\n        }\n        if (listener) {\n            const listeners = this._anyListeners;\n            for (let i = 0; i < listeners.length; i++) {\n                if (listener === listeners[i]) {\n                    listeners.splice(i, 1);\n                    return this;\n                }\n            }\n        }\n        else {\n            this._anyListeners = [];\n        }\n        return this;\n    }\n    /**\n     * Returns an array of listeners that are listening for any event that is specified. This array can be manipulated,\n     * e.g. to remove listeners.\n     */\n    listenersAny() {\n        return this._anyListeners || [];\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback.\n     *\n     * Note: acknowledgements sent to the server are not included.\n     *\n     * @example\n     * socket.onAnyOutgoing((event, ...args) => {\n     *   console.log(`sent event ${event}`);\n     * });\n     *\n     * @param listener\n     */\n    onAnyOutgoing(listener) {\n        this._anyOutgoingListeners = this._anyOutgoingListeners || [];\n        this._anyOutgoingListeners.push(listener);\n        return this;\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback. The listener is added to the beginning of the listeners array.\n     *\n     * Note: acknowledgements sent to the server are not included.\n     *\n     * @example\n     * socket.prependAnyOutgoing((event, ...args) => {\n     *   console.log(`sent event ${event}`);\n     * });\n     *\n     * @param listener\n     */\n    prependAnyOutgoing(listener) {\n        this._anyOutgoingListeners = this._anyOutgoingListeners || [];\n        this._anyOutgoingListeners.unshift(listener);\n        return this;\n    }\n    /**\n     * Removes the listener that will be fired when any event is emitted.\n     *\n     * @example\n     * const catchAllListener = (event, ...args) => {\n     *   console.log(`sent event ${event}`);\n     * }\n     *\n     * socket.onAnyOutgoing(catchAllListener);\n     *\n     * // remove a specific listener\n     * socket.offAnyOutgoing(catchAllListener);\n     *\n     * // or remove all listeners\n     * socket.offAnyOutgoing();\n     *\n     * @param [listener] - the catch-all listener (optional)\n     */\n    offAnyOutgoing(listener) {\n        if (!this._anyOutgoingListeners) {\n            return this;\n        }\n        if (listener) {\n            const listeners = this._anyOutgoingListeners;\n            for (let i = 0; i < listeners.length; i++) {\n                if (listener === listeners[i]) {\n                    listeners.splice(i, 1);\n                    return this;\n                }\n            }\n        }\n        else {\n            this._anyOutgoingListeners = [];\n        }\n        return this;\n    }\n    /**\n     * Returns an array of listeners that are listening for any event that is specified. This array can be manipulated,\n     * e.g. to remove listeners.\n     */\n    listenersAnyOutgoing() {\n        return this._anyOutgoingListeners || [];\n    }\n    /**\n     * Notify the listeners for each packet sent\n     *\n     * @param packet\n     *\n     * @private\n     */\n    notifyOutgoingListeners(packet) {\n        if (this._anyOutgoingListeners && this._anyOutgoingListeners.length) {\n            const listeners = this._anyOutgoingListeners.slice();\n            for (const listener of listeners) {\n                listener.apply(this, packet.data);\n            }\n        }\n    }\n}\n","/**\n * Initialize backoff timer with `opts`.\n *\n * - `min` initial timeout in milliseconds [100]\n * - `max` max timeout [10000]\n * - `jitter` [0]\n * - `factor` [2]\n *\n * @param {Object} opts\n * @api public\n */\nexport function Backoff(opts) {\n    opts = opts || {};\n    this.ms = opts.min || 100;\n    this.max = opts.max || 10000;\n    this.factor = opts.factor || 2;\n    this.jitter = opts.jitter > 0 && opts.jitter <= 1 ? opts.jitter : 0;\n    this.attempts = 0;\n}\n/**\n * Return the backoff duration.\n *\n * @return {Number}\n * @api public\n */\nBackoff.prototype.duration = function () {\n    var ms = this.ms * Math.pow(this.factor, this.attempts++);\n    if (this.jitter) {\n        var rand = Math.random();\n        var deviation = Math.floor(rand * this.jitter * ms);\n        ms = (Math.floor(rand * 10) & 1) == 0 ? ms - deviation : ms + deviation;\n    }\n    return Math.min(ms, this.max) | 0;\n};\n/**\n * Reset the number of attempts.\n *\n * @api public\n */\nBackoff.prototype.reset = function () {\n    this.attempts = 0;\n};\n/**\n * Set the minimum duration\n *\n * @api public\n */\nBackoff.prototype.setMin = function (min) {\n    this.ms = min;\n};\n/**\n * Set the maximum duration\n *\n * @api public\n */\nBackoff.prototype.setMax = function (max) {\n    this.max = max;\n};\n/**\n * Set the jitter\n *\n * @api public\n */\nBackoff.prototype.setJitter = function (jitter) {\n    this.jitter = jitter;\n};\n","import { Socket as Engine, installTimerFunctions, nextTick, } from \"engine.io-client\";\nimport { Socket } from \"./socket.js\";\nimport * as parser from \"socket.io-parser\";\nimport { on } from \"./on.js\";\nimport { Backoff } from \"./contrib/backo2.js\";\nimport { Emitter, } from \"@socket.io/component-emitter\";\nexport class Manager extends Emitter {\n    constructor(uri, opts) {\n        var _a;\n        super();\n        this.nsps = {};\n        this.subs = [];\n        if (uri && \"object\" === typeof uri) {\n            opts = uri;\n            uri = undefined;\n        }\n        opts = opts || {};\n        opts.path = opts.path || \"/socket.io\";\n        this.opts = opts;\n        installTimerFunctions(this, opts);\n        this.reconnection(opts.reconnection !== false);\n        this.reconnectionAttempts(opts.reconnectionAttempts || Infinity);\n        this.reconnectionDelay(opts.reconnectionDelay || 1000);\n        this.reconnectionDelayMax(opts.reconnectionDelayMax || 5000);\n        this.randomizationFactor((_a = opts.randomizationFactor) !== null && _a !== void 0 ? _a : 0.5);\n        this.backoff = new Backoff({\n            min: this.reconnectionDelay(),\n            max: this.reconnectionDelayMax(),\n            jitter: this.randomizationFactor(),\n        });\n        this.timeout(null == opts.timeout ? 20000 : opts.timeout);\n        this._readyState = \"closed\";\n        this.uri = uri;\n        const _parser = opts.parser || parser;\n        this.encoder = new _parser.Encoder();\n        this.decoder = new _parser.Decoder();\n        this._autoConnect = opts.autoConnect !== false;\n        if (this._autoConnect)\n            this.open();\n    }\n    reconnection(v) {\n        if (!arguments.length)\n            return this._reconnection;\n        this._reconnection = !!v;\n        return this;\n    }\n    reconnectionAttempts(v) {\n        if (v === undefined)\n            return this._reconnectionAttempts;\n        this._reconnectionAttempts = v;\n        return this;\n    }\n    reconnectionDelay(v) {\n        var _a;\n        if (v === undefined)\n            return this._reconnectionDelay;\n        this._reconnectionDelay = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setMin(v);\n        return this;\n    }\n    randomizationFactor(v) {\n        var _a;\n        if (v === undefined)\n            return this._randomizationFactor;\n        this._randomizationFactor = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setJitter(v);\n        return this;\n    }\n    reconnectionDelayMax(v) {\n        var _a;\n        if (v === undefined)\n            return this._reconnectionDelayMax;\n        this._reconnectionDelayMax = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setMax(v);\n        return this;\n    }\n    timeout(v) {\n        if (!arguments.length)\n            return this._timeout;\n        this._timeout = v;\n        return this;\n    }\n    /**\n     * Starts trying to reconnect if reconnection is enabled and we have not\n     * started reconnecting yet\n     *\n     * @private\n     */\n    maybeReconnectOnOpen() {\n        // Only try to reconnect if it's the first time we're connecting\n        if (!this._reconnecting &&\n            this._reconnection &&\n            this.backoff.attempts === 0) {\n            // keeps reconnection from firing twice for the same reconnection loop\n            this.reconnect();\n        }\n    }\n    /**\n     * Sets the current transport `socket`.\n     *\n     * @param {Function} fn - optional, callback\n     * @return self\n     * @public\n     */\n    open(fn) {\n        if (~this._readyState.indexOf(\"open\"))\n            return this;\n        this.engine = new Engine(this.uri, this.opts);\n        const socket = this.engine;\n        const self = this;\n        this._readyState = \"opening\";\n        this.skipReconnect = false;\n        // emit `open`\n        const openSubDestroy = on(socket, \"open\", function () {\n            self.onopen();\n            fn && fn();\n        });\n        // emit `error`\n        const errorSub = on(socket, \"error\", (err) => {\n            self.cleanup();\n            self._readyState = \"closed\";\n            this.emitReserved(\"error\", err);\n            if (fn) {\n                fn(err);\n            }\n            else {\n                // Only do this if there is no fn to handle the error\n                self.maybeReconnectOnOpen();\n            }\n        });\n        if (false !== this._timeout) {\n            const timeout = this._timeout;\n            if (timeout === 0) {\n                openSubDestroy(); // prevents a race condition with the 'open' event\n            }\n            // set timer\n            const timer = this.setTimeoutFn(() => {\n                openSubDestroy();\n                socket.close();\n                // @ts-ignore\n                socket.emit(\"error\", new Error(\"timeout\"));\n            }, timeout);\n            if (this.opts.autoUnref) {\n                timer.unref();\n            }\n            this.subs.push(function subDestroy() {\n                clearTimeout(timer);\n            });\n        }\n        this.subs.push(openSubDestroy);\n        this.subs.push(errorSub);\n        return this;\n    }\n    /**\n     * Alias for open()\n     *\n     * @return self\n     * @public\n     */\n    connect(fn) {\n        return this.open(fn);\n    }\n    /**\n     * Called upon transport open.\n     *\n     * @private\n     */\n    onopen() {\n        // clear old subs\n        this.cleanup();\n        // mark as open\n        this._readyState = \"open\";\n        this.emitReserved(\"open\");\n        // add new subs\n        const socket = this.engine;\n        this.subs.push(on(socket, \"ping\", this.onping.bind(this)), on(socket, \"data\", this.ondata.bind(this)), on(socket, \"error\", this.onerror.bind(this)), on(socket, \"close\", this.onclose.bind(this)), on(this.decoder, \"decoded\", this.ondecoded.bind(this)));\n    }\n    /**\n     * Called upon a ping.\n     *\n     * @private\n     */\n    onping() {\n        this.emitReserved(\"ping\");\n    }\n    /**\n     * Called with data.\n     *\n     * @private\n     */\n    ondata(data) {\n        try {\n            this.decoder.add(data);\n        }\n        catch (e) {\n            this.onclose(\"parse error\", e);\n        }\n    }\n    /**\n     * Called when parser fully decodes a packet.\n     *\n     * @private\n     */\n    ondecoded(packet) {\n        // the nextTick call prevents an exception in a user-provided event listener from triggering a disconnection due to a \"parse error\"\n        nextTick(() => {\n            this.emitReserved(\"packet\", packet);\n        }, this.setTimeoutFn);\n    }\n    /**\n     * Called upon socket error.\n     *\n     * @private\n     */\n    onerror(err) {\n        this.emitReserved(\"error\", err);\n    }\n    /**\n     * Creates a new socket for the given `nsp`.\n     *\n     * @return {Socket}\n     * @public\n     */\n    socket(nsp, opts) {\n        let socket = this.nsps[nsp];\n        if (!socket) {\n            socket = new Socket(this, nsp, opts);\n            this.nsps[nsp] = socket;\n        }\n        else if (this._autoConnect && !socket.active) {\n            socket.connect();\n        }\n        return socket;\n    }\n    /**\n     * Called upon a socket close.\n     *\n     * @param socket\n     * @private\n     */\n    _destroy(socket) {\n        const nsps = Object.keys(this.nsps);\n        for (const nsp of nsps) {\n            const socket = this.nsps[nsp];\n            if (socket.active) {\n                return;\n            }\n        }\n        this._close();\n    }\n    /**\n     * Writes a packet.\n     *\n     * @param packet\n     * @private\n     */\n    _packet(packet) {\n        const encodedPackets = this.encoder.encode(packet);\n        for (let i = 0; i < encodedPackets.length; i++) {\n            this.engine.write(encodedPackets[i], packet.options);\n        }\n    }\n    /**\n     * Clean up transport subscriptions and packet buffer.\n     *\n     * @private\n     */\n    cleanup() {\n        this.subs.forEach((subDestroy) => subDestroy());\n        this.subs.length = 0;\n        this.decoder.destroy();\n    }\n    /**\n     * Close the current socket.\n     *\n     * @private\n     */\n    _close() {\n        this.skipReconnect = true;\n        this._reconnecting = false;\n        this.onclose(\"forced close\");\n        if (this.engine)\n            this.engine.close();\n    }\n    /**\n     * Alias for close()\n     *\n     * @private\n     */\n    disconnect() {\n        return this._close();\n    }\n    /**\n     * Called upon engine close.\n     *\n     * @private\n     */\n    onclose(reason, description) {\n        this.cleanup();\n        this.backoff.reset();\n        this._readyState = \"closed\";\n        this.emitReserved(\"close\", reason, description);\n        if (this._reconnection && !this.skipReconnect) {\n            this.reconnect();\n        }\n    }\n    /**\n     * Attempt a reconnection.\n     *\n     * @private\n     */\n    reconnect() {\n        if (this._reconnecting || this.skipReconnect)\n            return this;\n        const self = this;\n        if (this.backoff.attempts >= this._reconnectionAttempts) {\n            this.backoff.reset();\n            this.emitReserved(\"reconnect_failed\");\n            this._reconnecting = false;\n        }\n        else {\n            const delay = this.backoff.duration();\n            this._reconnecting = true;\n            const timer = this.setTimeoutFn(() => {\n                if (self.skipReconnect)\n                    return;\n                this.emitReserved(\"reconnect_attempt\", self.backoff.attempts);\n                // check again for the case socket closed in above events\n                if (self.skipReconnect)\n                    return;\n                self.open((err) => {\n                    if (err) {\n                        self._reconnecting = false;\n                        self.reconnect();\n                        this.emitReserved(\"reconnect_error\", err);\n                    }\n                    else {\n                        self.onreconnect();\n                    }\n                });\n            }, delay);\n            if (this.opts.autoUnref) {\n                timer.unref();\n            }\n            this.subs.push(function subDestroy() {\n                clearTimeout(timer);\n            });\n        }\n    }\n    /**\n     * Called upon successful reconnect.\n     *\n     * @private\n     */\n    onreconnect() {\n        const attempt = this.backoff.attempts;\n        this._reconnecting = false;\n        this.backoff.reset();\n        this.emitReserved(\"reconnect\", attempt);\n    }\n}\n","import { url } from \"./url.js\";\nimport { Manager } from \"./manager.js\";\nimport { Socket } from \"./socket.js\";\n/**\n * Managers cache.\n */\nconst cache = {};\nfunction lookup(uri, opts) {\n    if (typeof uri === \"object\") {\n        opts = uri;\n        uri = undefined;\n    }\n    opts = opts || {};\n    const parsed = url(uri, opts.path || \"/socket.io\");\n    const source = parsed.source;\n    const id = parsed.id;\n    const path = parsed.path;\n    const sameNamespace = cache[id] && path in cache[id][\"nsps\"];\n    const newConnection = opts.forceNew ||\n        opts[\"force new connection\"] ||\n        false === opts.multiplex ||\n        sameNamespace;\n    let io;\n    if (newConnection) {\n        io = new Manager(source, opts);\n    }\n    else {\n        if (!cache[id]) {\n            cache[id] = new Manager(source, opts);\n        }\n        io = cache[id];\n    }\n    if (parsed.query && !opts.query) {\n        opts.query = parsed.queryKey;\n    }\n    return io.socket(parsed.path, opts);\n}\n// so that \"lookup\" can be used both as a function (e.g. `io(...)`) and as a\n// namespace (e.g. `io.connect(...)`), for backward compatibility\nObject.assign(lookup, {\n    Manager,\n    Socket,\n    io: lookup,\n    connect: lookup,\n});\n/**\n * Protocol version.\n *\n * @public\n */\nexport { protocol } from \"socket.io-parser\";\n/**\n * Expose constructors for standalone build.\n *\n * @public\n */\nexport { Manager, Socket, lookup as io, lookup as connect, lookup as default, };\n","import { parse } from \"engine.io-client\";\n/**\n * URL parser.\n *\n * @param uri - url\n * @param path - the request path of the connection\n * @param loc - An object meant to mimic window.location.\n *        Defaults to window.location.\n * @public\n */\nexport function url(uri, path = \"\", loc) {\n    let obj = uri;\n    // default to window.location\n    loc = loc || (typeof location !== \"undefined\" && location);\n    if (null == uri)\n        uri = loc.protocol + \"//\" + loc.host;\n    // relative path support\n    if (typeof uri === \"string\") {\n        if (\"/\" === uri.charAt(0)) {\n            if (\"/\" === uri.charAt(1)) {\n                uri = loc.protocol + uri;\n            }\n            else {\n                uri = loc.host + uri;\n            }\n        }\n        if (!/^(https?|wss?):\\/\\//.test(uri)) {\n            if (\"undefined\" !== typeof loc) {\n                uri = loc.protocol + \"//\" + uri;\n            }\n            else {\n                uri = \"https://\" + uri;\n            }\n        }\n        // parse\n        obj = parse(uri);\n    }\n    // make sure we treat `localhost:80` and `localhost` equally\n    if (!obj.port) {\n        if (/^(http|ws)$/.test(obj.protocol)) {\n            obj.port = \"80\";\n        }\n        else if (/^(http|ws)s$/.test(obj.protocol)) {\n            obj.port = \"443\";\n        }\n    }\n    obj.path = obj.path || \"/\";\n    const ipv6 = obj.host.indexOf(\":\") !== -1;\n    const host = ipv6 ? \"[\" + obj.host + \"]\" : obj.host;\n    // define unique id\n    obj.id = obj.protocol + \"://\" + host + \":\" + obj.port + path;\n    // define href\n    obj.href =\n        obj.protocol +\n            \"://\" +\n            host +\n            (loc && loc.port === obj.port ? \"\" : \":\" + obj.port);\n    return obj;\n}\n"],"names":["_get","Reflect","get","bind","target","property","receiver","base","object","Object","prototype","hasOwnProperty","call","getPrototypeOf","desc","getOwnPropertyDescriptor","arguments","length","value","apply","this","PACKET_TYPES","create","PACKET_TYPES_REVERSE","keys","forEach","key","ERROR_PACKET","type","data","withNativeBlob","Blob","toString","withNativeArrayBuffer","ArrayBuffer","encodeBlobAsBase64","callback","fileReader","FileReader","onload","content","result","split","readAsDataURL","_ref","supportsBinary","obj","isView","buffer","chars","lookup","Uint8Array","i","charCodeAt","decodeBase64Packet","binaryType","decoded","base64","encoded1","encoded2","encoded3","encoded4","bufferLength","len","p","arraybuffer","bytes","decode","mapBinary","encodedPacket","charAt","substring","SEPARATOR","String","fromCharCode","Emitter","mixin","on","addEventListener","event","fn","_callbacks","push","once","off","removeListener","removeAllListeners","removeEventListener","cb","callbacks","splice","emit","args","Array","slice","emitReserved","listeners","hasListeners","globalThisShim","self","window","Function","pick","_len","attr","_key","reduce","acc","k","NATIVE_SET_TIMEOUT","globalThis","NATIVE_CLEAR_TIMEOUT","installTimerFunctions","opts","useNativeTimers","setTimeoutFn","clearTimeoutFn","BASE64_OVERHEAD","prev","TransportError","_Error","_inherits","_super","_createSuper","reason","description","context","_this","_classCallCheck","_createClass","_wrapNativeSuper","Error","Transport","_Emitter","_super2","_this2","writable","_assertThisInitialized","query","socket","_getPrototypeOf","readyState","doOpen","doClose","onClose","packets","write","packet","decodePacket","onPacket","details","onPause","alphabet","map","seed","encode","num","encoded","Math","floor","yeast","now","Date","str","encodeURIComponent","XMLHttpRequest","err","hasCORS","XHR","xdomain","e","concat","join","empty","hasXHR2","responseType","Polling","_Transport","polling","location","isSSL","protocol","port","xd","hostname","xs","secure","forceBase64","poll","pause","total","doPoll","_this3","encodedPayload","encodedPackets","decodedPacket","decodePayload","onOpen","_this4","close","_this5","count","encodePacket","encodePayload","doWrite","schema","timestampRequests","timestampParam","sid","b64","Number","encodedQuery","indexOf","path","undefined","assign","Request","uri","_this6","req","request","method","xhrStatus","onError","_this7","onData","pollXhr","_this8","async","_this9","xscheme","xhr","open","extraHeaders","setDisableHeaderCheck","setRequestHeader","withCredentials","requestTimeout","timeout","onreadystatechange","status","onLoad","send","document","index","requestsCount","requests","cleanup","fromError","abort","responseText","attachEvent","unloadHandler","nextTick","Promise","resolve","then","WebSocket","isReactNative","navigator","product","toLowerCase","WS","check","protocols","headers","ws","addEventListeners","onopen","autoUnref","_socket","unref","onclose","closeEvent","onmessage","ev","onerror","_loop","lastPacket","transports","websocket","re","parts","parse","src","b","replace","m","exec","source","host","authority","ipv6uri","pathNames","regx","names","queryKey","$0","$1","$2","Socket","writeBuffer","prevBufferLen","agent","upgrade","rememberUpgrade","addTrailingSlash","rejectUnauthorized","perMessageDeflate","threshold","transportOptions","closeOnBeforeunload","qs","qry","pairs","l","pair","decodeURIComponent","id","upgrades","pingInterval","pingTimeout","pingTimeoutTimer","beforeunloadEventListener","transport","offlineEventListener","name","EIO","priorWebsocketSuccess","createTransport","shift","setTransport","onDrain","failed","onTransportOpen","msg","upgrading","flush","freezeTransport","error","onTransportClose","onupgrade","to","probe","onHandshake","JSON","resetPingTimeout","sendPacket","code","filterUpgrades","maxPayload","getWritablePackets","payloadSize","c","utf8Length","ceil","byteLength","size","options","compress","cleanupAndClose","waitForUpgrade","filteredUpgrades","j","withNativeFile","File","isBinary","hasBinary","toJSON","isArray","deconstructPacket","buffers","packetData","pack","_deconstructPacket","attachments","placeholder","_placeholder","newData","reconstructPacket","_reconstructPacket","PacketType","Encoder","replacer","EVENT","ACK","encodeAsString","encodeAsBinary","BINARY_EVENT","BINARY_ACK","nsp","stringify","deconstruction","unshift","Decoder","reviver","reconstructor","isBinaryEvent","decodeString","BinaryReconstructor","takeBinaryData","start","buf","next","payload","tryParse","substr","isPayloadValid","finishedReconstruction","CONNECT","DISCONNECT","CONNECT_ERROR","reconPack","binData","RESERVED_EVENTS","freeze","connect","connect_error","disconnect","disconnecting","newListener","io","connected","recovered","receiveBuffer","sendBuffer","_queue","_queueSeq","ids","acks","flags","auth","_opts","_autoConnect","subs","onpacket","subEvents","_readyState","_len2","_key2","retries","fromQueue","volatile","_addToQueue","ack","pop","_registerAckCallback","isTransportWritable","engine","notifyOutgoingListeners","_a","ackTimeout","timer","_len3","_key3","_len4","_key4","withErr","reject","arg1","arg2","tryCount","pending","_len5","responseArgs","_key5","_drainQueue","force","_packet","_sendConnectPacket","_pid","pid","offset","_lastOffset","onconnect","onevent","onack","ondisconnect","destroy","message","emitEvent","_anyListeners","_step","_iterator","_createForOfIteratorHelper","s","n","done","f","sent","_len6","_key6","emitBuffered","subDestroy","listener","_anyOutgoingListeners","_step2","_iterator2","Backoff","ms","min","max","factor","jitter","attempts","duration","pow","rand","random","deviation","reset","setMin","setMax","setJitter","Manager","nsps","reconnection","reconnectionAttempts","Infinity","reconnectionDelay","reconnectionDelayMax","randomizationFactor","backoff","_parser","parser","encoder","decoder","autoConnect","v","_reconnection","_reconnectionAttempts","_reconnectionDelay","_randomizationFactor","_reconnectionDelayMax","_timeout","_reconnecting","reconnect","Engine","skipReconnect","openSubDestroy","errorSub","maybeReconnectOnOpen","clearTimeout","onping","ondata","ondecoded","add","active","_i","_nsps","_close","delay","onreconnect","attempt","cache","parsed","loc","test","href","url","sameNamespace","forceNew","multiplex"],"sourceRoot":""}